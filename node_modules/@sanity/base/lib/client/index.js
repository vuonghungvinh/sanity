'use strict';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _client = require('@sanity/client');

var _client2 = _interopRequireDefault(_client);

var _configSanity = require('config:sanity');

var _configSanity2 = _interopRequireDefault(_configSanity);

var _configureClient = require('part:@sanity/base/configure-client?');

var _configureClient2 = _interopRequireDefault(_configureClient);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var deprecationMessage = '[deprecation] The Sanity client is now exposed in CommonJS format.\n\nFor instance, change:\n  `const client = require(\'part:@sanity/base/client\').default`\n\nTo the following:\n  `const client = require(\'part:@sanity/base/client\')`\n';

var apiConfig = _extends({}, _configSanity2.default.api, { withCredentials: true, useCdn: false });
var client = (0, _client2.default)(apiConfig);

var configuredClient = _configureClient2.default ? (0, _configureClient2.default)((0, _client2.default)(apiConfig)) : client;

// Warn when people use `.default`
Object.defineProperty(configuredClient, 'default', {
  get: function get() {
    // eslint-disable-next-line no-console
    console.warn(deprecationMessage);
    return configuredClient;
  }
});

// Expose as CJS to allow Node scripts to consume it without `.default`
module.exports = configuredClient;