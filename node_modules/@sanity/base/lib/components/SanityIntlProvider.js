'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _intl = require('part:@sanity/base/locale/intl');

var _formatters = require('part:@sanity/base/locale/formatters');

var _languageResolver = require('part:@sanity/base/language-resolver');

var _localeMessageFetcher = require('part:@sanity/base/locale-message-fetcher');

var _localeMessageFetcher2 = _interopRequireDefault(_localeMessageFetcher);

var _spinner = require('part:@sanity/components/loading/spinner');

var _spinner2 = _interopRequireDefault(_spinner);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SanityIntlProvider = function (_React$Component) {
  _inherits(SanityIntlProvider, _React$Component);

  function SanityIntlProvider(props) {
    _classCallCheck(this, SanityIntlProvider);

    var _this = _possibleConstructorReturn(this, (SanityIntlProvider.__proto__ || Object.getPrototypeOf(SanityIntlProvider)).call(this, props));

    _this.catchError = _this.catchError.bind(_this);
    _this.state = {
      messages: null,
      language: null,
      error: null
    };
    return _this;
  }

  _createClass(SanityIntlProvider, [{
    key: 'catchError',
    value: function catchError(err) {
      console.error(err); // eslint-disable-line no-console
      this.setState({ error: err });
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _this2 = this;

      var supportedLanguages = this.props.supportedLanguages;

      (0, _languageResolver.resolveLanguage)(supportedLanguages).then(function (language) {
        _localeMessageFetcher2.default.fetchLocalizedMessages(language).then(function (localizedMessages) {
          var languagePrefix = language.split('-')[0];
          var localeData = require('react-intl/locale-data/' + languagePrefix);
          (0, _intl.addLocaleData)(localeData);

          // In order to get a proper stacktrace on rendering errors,
          // we need to move this out of the current call stack
          _this2.mountTimer = setTimeout(function () {
            _this2.setState({
              messages: localizedMessages,
              language: language
            });
          }, 0);
        }).catch(_this2.catchError);
      }).catch(this.catchError);
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      clearTimeout(this.mountTimer);
    }
  }, {
    key: 'render',
    value: function render() {
      var _state = this.state,
          messages = _state.messages,
          language = _state.language,
          error = _state.error;

      if (error) {
        return _react2.default.createElement(
          'div',
          null,
          _react2.default.createElement(
            'h2',
            null,
            'Error fetching locale data'
          ),
          _react2.default.createElement(
            'code',
            null,
            _react2.default.createElement(
              'pre',
              null,
              error.stack
            )
          )
        );
      }

      if (!messages) {
        return _react2.default.createElement(_spinner2.default, { fullscreen: true, message: 'Loading locale messages...' });
      }

      return _react2.default.createElement(
        _intl.IntlProvider,
        { locale: language, messages: messages },
        _react2.default.createElement(
          _formatters.IntlWrapper,
          null,
          this.props.children
        )
      );
    }
  }]);

  return SanityIntlProvider;
}(_react2.default.Component);

SanityIntlProvider.propTypes = {
  children: _propTypes2.default.node,
  supportedLanguages: _propTypes2.default.arrayOf(_propTypes2.default.string)
};

exports.default = SanityIntlProvider;