'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _union2 = require('lodash/union');

var _union3 = _interopRequireDefault(_union2);

var _throttle2 = require('lodash/throttle');

var _throttle3 = _interopRequireDefault(_throttle2);

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _document = require('part:@sanity/base/datastore/document');

var _document2 = _interopRequireDefault(_document);

var _shallowEquals = require('shallow-equals');

var _shallowEquals2 = _interopRequireDefault(_shallowEquals);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function deprecatedCheck(props, propName, componentName) {
  var _PropTypes$func;

  if (_react2.default.isValidElement(props[propName])) {
    return new Error('Passing a React element as ' + propName + ' to ' + componentName + ' is deprecated. Use a function instead.');
  }

  for (var _len = arguments.length, rest = Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {
    rest[_key - 3] = arguments[_key];
  }

  return (_PropTypes$func = _propTypes2.default.func).isRequired.apply(_PropTypes$func, [props, propName, componentName].concat(rest));
}

function createInitialState() {
  return {
    result: null,
    complete: false,
    loading: true,
    error: false
  };
}

function keysEqual(object, otherObject) {
  var excludeKeys = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];

  var objectKeys = Object.keys(object).filter(function (key) {
    return !excludeKeys.includes(key);
  });
  var otherObjectKeys = Object.keys(otherObject).filter(function (key) {
    return !excludeKeys.includes(key);
  });

  if (objectKeys.length !== otherObjectKeys.length) {
    return false;
  }

  return (0, _union3.default)(objectKeys, otherObjectKeys).every(function (key) {
    return object[key] === otherObject[key];
  });
}

var RESPOND_TO_TRANSITIONS = ['appear', 'disappear', 'update' // todo: remove this
];

var QueryContainer = function (_React$Component) {
  _inherits(QueryContainer, _React$Component);

  function QueryContainer() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, QueryContainer);

    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = QueryContainer.__proto__ || Object.getPrototypeOf(QueryContainer)).call.apply(_ref, [this].concat(args))), _this), _this.state = createInitialState(), _this.next = function (event) {
      switch (event.type) {
        case 'snapshot':
          {
            _this.setState({ error: null, loading: false, result: { documents: event.documents } });
            break;
          }
        case 'mutation':
          {
            _this.receiveMutations(event);
            break;
          }
        default:
      }
    }, _this.error = function (error) {
      // @todo make sure some kind of error dialog is shown, somewhere
      console.error(error); // eslint-disable-line no-console
      _this.setState({ error: error, loading: false });
    }, _this.complete = function () {
      _this.setState({ complete: true, loading: false });
    }, _this.refresh = (0, _throttle3.default)(function () {
      _this.subscribe(_this.props.query, _this.props.params);
    }, 1000, { leading: true, trailing: true }), _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(QueryContainer, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      this.subscribe(this.props.query, this.props.params);
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this.unsubscribe();
    }
  }, {
    key: 'subscribe',
    value: function subscribe(query, params) {
      this.unsubscribe();
      this._subscription = _document2.default.query(query, params).filter(function (event) {
        return event.type === 'snapshot' || RESPOND_TO_TRANSITIONS.includes(event.transition);
      }).subscribe(this);
    }
  }, {
    key: 'receiveMutations',
    value: function receiveMutations(event) {
      // todo: apply mutations on this.state.collection
      // just resubcribing for now.
      /*
      const exampleEvent = {
        type: 'mutation',
        eventId: 'yr50wh-mzc-lby-hcf-3zumkc867#public/hi3HUGlrHu2c292ZddrZes',
        documentId: 'public/hi3HUGlrHu2c292ZddrZes',
        transactionId: 'yr50wh-mzc-lby-hcf-3zumkc867',
        transition: 'disappear',
        identity: 'Z29vZ2xlX29hdXRoMjo6MTA2MTc2MDY5MDI1MDA3MzA5MTAwOjozMjM=',
        mutations: [
          {
            delete: {
              id: 'public/hi3HUGlrHu2c292ZddrZes'
            }
          }
        ],
        previousRev: 'm5qsec-ovr-cv8-i1q-qck9otism',
        resultRev: 'yr50wh-mzc-lby-hcf-3zumkc867',
        timestamp: '2016-12-22T12:24:02.433897Z'
      }
       */
      var result = this.state.result;


      var hasCreateOrDelete = event.type === 'mutation' && event.mutations.some(function (mut) {
        return mut.create || mut.delete && (result.documents || []).some(function (doc) {
          return doc._id === mut.delete.id;
        });
      });

      if (hasCreateOrDelete) {
        this.refresh();
        this.refresh(); // invoke on both ends to make sure we get the refreshed result
      }
    }
  }, {
    key: 'unsubscribe',
    value: function unsubscribe() {
      if (this._subscription) {
        this._subscription.unsubscribe();
      }
    }
  }, {
    key: 'componentWillUpdate',
    value: function componentWillUpdate(nextProps) {
      var sameQuery = nextProps.query === this.props.query;
      var sameParams = (0, _shallowEquals2.default)(nextProps.params, this.props.params);

      if (!sameQuery || !sameParams) {
        this.setState(createInitialState());
        this.subscribe(nextProps.query, nextProps.params);
      }
    }
  }, {
    key: 'shouldComponentUpdate',
    value: function shouldComponentUpdate(nextProps, nextState) {
      if (!(0, _shallowEquals2.default)(this.state, nextState)) {
        return true;
      }
      if (nextProps.query !== this.props.query || !(0, _shallowEquals2.default)(nextProps.params, this.props.params)) {
        return true;
      }

      return !keysEqual(nextProps, this.props, ['mapFn', 'query', 'params']);
    }
  }, {
    key: 'renderDeprecated',
    value: function renderDeprecated() {
      return _react2.default.cloneElement(_react2.default.Children.only(this.props.children), this.props.mapFn(this.state));
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          children = _props.children,
          mapFn = _props.mapFn,
          rest = _objectWithoutProperties(_props, ['children', 'mapFn']);

      if (_react2.default.isValidElement(children)) {
        return this.renderDeprecated();
      }
      if (!children || typeof children !== 'function') {
        return _react2.default.createElement(
          'div',
          null,
          'Invalid usage of QueryContainer. Expected a function as its only child'
        );
      }
      return children(_extends({}, rest, { onRetry: this.refresh }, mapFn(this.state)));
    }
  }]);

  return QueryContainer;
}(_react2.default.Component);

QueryContainer.propTypes = {
  query: _propTypes2.default.string,
  params: _propTypes2.default.object,
  mapFn: _propTypes2.default.func,
  children: deprecatedCheck
};
QueryContainer.defaultProps = {
  mapFn: function mapFn(props) {
    return props;
  }
};
exports.default = QueryContainer;