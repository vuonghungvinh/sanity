'use strict';

var _geopoint = require('./types/geopoint');

var _geopoint2 = _interopRequireDefault(_geopoint);

var _imageAsset = require('./types/imageAsset');

var _imageAsset2 = _interopRequireDefault(_imageAsset);

var _fileAsset = require('./types/fileAsset');

var _fileAsset2 = _interopRequireDefault(_fileAsset);

var _schema = require('@sanity/schema');

var _schema2 = _interopRequireDefault(_schema);

var _schema3 = require('part:@sanity/form-builder/input/legacy-date/schema?');

var _schema4 = _interopRequireDefault(_schema3);

var _validateSchema = require('@sanity/schema/lib/sanity/validateSchema');

var _validateSchema2 = _interopRequireDefault(_validateSchema);

var _groupProblems = require('@sanity/schema/lib/sanity/groupProblems');

var _groupProblems2 = _interopRequireDefault(_groupProblems);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var isError = function isError(problem) {
  return problem.severity === 'error';
};

module.exports = function (schemaDef) {
  var validated = (0, _validateSchema2.default)(schemaDef.types).getTypes();

  var validation = (0, _groupProblems2.default)(validated);
  var hasErrors = validation.some(function (group) {
    return group.problems.some(isError);
  });

  var types = hasErrors ? [] : [].concat(_toConsumableArray(schemaDef.types), [_geopoint2.default, _schema4.default, _imageAsset2.default, _fileAsset2.default]).filter(Boolean);

  var compiled = _schema2.default.compile({
    name: schemaDef.name,
    types: types
  });

  compiled._source = schemaDef;
  compiled._validation = validation;
  return compiled;
};