'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _loadGoogleMapsApi = require('./loadGoogleMapsApi');

var _loadGoogleMapsApi2 = _interopRequireDefault(_loadGoogleMapsApi);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var GoogleMapsLoadProxy = function (_React$Component) {
  _inherits(GoogleMapsLoadProxy, _React$Component);

  function GoogleMapsLoadProxy(props) {
    _classCallCheck(this, GoogleMapsLoadProxy);

    var _this = _possibleConstructorReturn(this, (GoogleMapsLoadProxy.__proto__ || Object.getPrototypeOf(GoogleMapsLoadProxy)).call(this, props));

    _this.state = {
      loading: true,
      error: null
    };
    return _this;
  }

  _createClass(GoogleMapsLoadProxy, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _this2 = this;

      (0, _loadGoogleMapsApi2.default)(this.props).then(function (api) {
        return _this2.setState({ loading: false, api: api });
      }).catch(function (err) {
        return _this2.setState({ error: err });
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _state = this.state,
          error = _state.error,
          loading = _state.loading,
          api = _state.api;

      if (error) {
        return _react2.default.createElement(
          'div',
          null,
          'Load error: ',
          error.stack
        );
      }

      if (loading) {
        return _react2.default.createElement(
          'div',
          null,
          'Loading Google Maps API'
        );
      }

      var GeopointSelect = this.props.component;

      return _react2.default.createElement(GeopointSelect, _extends({}, this.props, { api: api }));
    }
  }]);

  return GoogleMapsLoadProxy;
}(_react2.default.Component);

GoogleMapsLoadProxy.propTypes = {
  component: _propTypes2.default.func.isRequired
};
exports.default = GoogleMapsLoadProxy;