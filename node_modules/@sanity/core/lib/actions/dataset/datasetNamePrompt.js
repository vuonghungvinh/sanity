'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = promptForDatasetName;
const datasetNameError = 'Dataset names can only contain lowercase characters,' + 'numbers, underscores and dashes' + 'and can be at most 128 characters.';

function promptForDatasetName(prompt) {
  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  return prompt.single(_extends({
    type: 'input',
    message: 'Dataset name:',
    validate: name => {
      return (/^[-\w]{1,128}$/.test(name) || datasetNameError
      );
    }
  }, options));
}