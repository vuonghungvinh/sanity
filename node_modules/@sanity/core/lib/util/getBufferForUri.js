'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _simpleConcat = require('simple-concat');

var _simpleConcat2 = _interopRequireDefault(_simpleConcat);

var _getStreamForUri = require('./getStreamForUri');

var _getStreamForUri2 = _interopRequireDefault(_getStreamForUri);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

exports.default = (() => {
  var _ref = _asyncToGenerator(function* (uri) {
    const stream = yield (0, _getStreamForUri2.default)(uri);

    return new Promise(function (resolve, reject) {
      (0, _simpleConcat2.default)(stream, function (err, buffer) {
        if (err) {
          reject(err);
        } else {
          resolve(buffer);
        }
      });
    });
  });

  return function (_x) {
    return _ref.apply(this, arguments);
  };
})();