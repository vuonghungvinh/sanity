'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _get2 = require('lodash/get');

var _get3 = _interopRequireDefault(_get2);

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _default = require('part:@sanity/components/lists/default');

var _sortable = require('part:@sanity/components/lists/sortable');

var _default2 = require('part:@sanity/components/fieldsets/default');

var _default3 = _interopRequireDefault(_default2);

var _default4 = require('part:@sanity/components/buttons/default');

var _default5 = _interopRequireDefault(_default4);

var _Item = require('./Item');

var _Item2 = _interopRequireDefault(_Item);

var _FormBuilderPropTypes = require('../../FormBuilderPropTypes');

var _FormBuilderPropTypes2 = _interopRequireDefault(_FormBuilderPropTypes);

var _ArrayOfPrimitives = require('./styles/ArrayOfPrimitives.css');

var _ArrayOfPrimitives2 = _interopRequireDefault(_ArrayOfPrimitives);

var _PatchEvent = require('../../PatchEvent');

var _PatchEvent2 = _interopRequireDefault(_PatchEvent);

var _dropdown = require('part:@sanity/components/buttons/dropdown');

var _dropdown2 = _interopRequireDefault(_dropdown);

var _getEmptyValue = require('./getEmptyValue');

var _getEmptyValue2 = _interopRequireDefault(_getEmptyValue);

var _resolveTypeName = require('../../utils/resolveTypeName');

var _InvalidValue = require('../InvalidValue');

var _InvalidValue2 = _interopRequireDefault(_InvalidValue);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function move(arr, from, to) {
  var copy = arr.slice();
  var val = copy[from];
  copy.splice(from, 1);
  copy.splice(to, 0, val);
  return copy;
}

var ArrayOfPrimitivesInput = function (_React$PureComponent) {
  _inherits(ArrayOfPrimitivesInput, _React$PureComponent);

  function ArrayOfPrimitivesInput() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, ArrayOfPrimitivesInput);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ArrayOfPrimitivesInput.__proto__ || Object.getPrototypeOf(ArrayOfPrimitivesInput)).call.apply(_ref, [this].concat(args))), _this), _this.handleRemoveItem = function (index /*: number*/) {
      _this.removeAt(index);
    }, _this.handleDropDownAction = function (action) {
      _this.append(action.type);
    }, _this.handleAddBtnClick = function () {
      _this.append(_this.props.type.of[0]);
    }, _this.handleItemChange = function (event) {
      _this.props.onChange(event);
    }, _this.handleSort = function (event) {
      var value = _this.props.value;
      var oldIndex = event.oldIndex,
          newIndex = event.newIndex;

      _this.set(move(value, oldIndex, newIndex));
    }, _this.renderItem = function (item, index) {
      var _this$props = _this.props,
          type = _this$props.type,
          level = _this$props.level,
          value = _this$props.value,
          _onChange = _this$props.onChange;


      var typeName = (0, _resolveTypeName.resolveTypeName)(item);
      var itemMemberType = _this.getMemberType(typeName);

      if (!itemMemberType) {
        return _react2.default.createElement(_InvalidValue2.default, {
          key: index,
          actualType: typeName,
          validTypes: type.of.map(function (memberType) {
            return memberType.name;
          }),
          onChange: function onChange(ev) {
            return _onChange(ev.prefixAll(index));
          },
          value: value
        });
      }

      var sortable = (0, _get3.default)(type, 'options.sortable') !== false;
      var ListItem = sortable ? _sortable.Item : _default.Item;
      return _react2.default.createElement(
        ListItem,
        { key: index, index: index, className: _ArrayOfPrimitives2.default.item },
        _react2.default.createElement(_Item2.default, {
          level: level + 1,
          index: index,
          value: item,
          sortable: sortable,
          type: itemMemberType,
          onChange: _this.handleItemChange,
          onRemove: _this.handleRemoveItem
        })
      );
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(ArrayOfPrimitivesInput, [{
    key: 'set',
    value: function set(nextValue /*: any[]*/) {
      var patch = nextValue.length === 0 ? (0, _PatchEvent.unset)() : (0, _PatchEvent.set)(nextValue);
      this.props.onChange(_PatchEvent2.default.from(patch));
    }
  }, {
    key: 'removeAt',
    value: function removeAt(index /*: number*/) {
      this.set(this.props.value.filter(function (_, i) {
        return i !== index;
      }));
    }
  }, {
    key: 'append',
    value: function append(type) {
      this.set((this.props.value || []).concat((0, _getEmptyValue2.default)(type)));
    }
  }, {
    key: 'getMemberType',
    value: function getMemberType(typeName) {
      var type = this.props.type;

      return type.of.find(function (memberType) {
        return memberType.name === typeName;
      });
    }
  }, {
    key: 'renderList',
    value: function renderList(value) {
      var type = this.props.type;

      var isSortable = (0, _get3.default)(type, 'options.sortable') !== false;
      return isSortable ? _react2.default.createElement(
        _sortable.List,
        { className: _ArrayOfPrimitives2.default.list, onSort: this.handleSort, movingItemClass: _ArrayOfPrimitives2.default.movingItem, useDragHandle: true },
        value.map(this.renderItem)
      ) : _react2.default.createElement(
        _default.List,
        { decoration: 'divider' },
        value.map(this.renderItem)
      );
    }
  }, {
    key: 'renderSelectType',
    value: function renderSelectType() {
      var type = this.props.type;


      var items = type.of.map(function (memberDef) {
        return {
          title: memberDef.title || memberDef.type.name,
          type: memberDef
        };
      });

      return _react2.default.createElement(
        _dropdown2.default,
        { items: items, color: 'primary', onAction: this.handleDropDownAction },
        'New ',
        this.props.type.title
      );
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          type = _props.type,
          value = _props.value,
          level = _props.level;

      return _react2.default.createElement(
        _default3.default,
        { legend: type.title, description: type.description, level: level },
        _react2.default.createElement(
          'div',
          { className: _ArrayOfPrimitives2.default.root },
          value && value.length > 0 && _react2.default.createElement(
            'div',
            { className: _ArrayOfPrimitives2.default.list },
            this.renderList(value)
          ),
          _react2.default.createElement(
            'div',
            { className: _ArrayOfPrimitives2.default.functions },
            this.props.type.of.length === 1 ? _react2.default.createElement(
              _default5.default,
              { onClick: this.handleAddBtnClick, className: _ArrayOfPrimitives2.default.addButton },
              'Add'
            ) : this.renderSelectType()
          )
        )
      );
    }
  }]);

  return ArrayOfPrimitivesInput;
}(_react2.default.PureComponent);

ArrayOfPrimitivesInput.propTypes = {
  type: _FormBuilderPropTypes2.default.type,
  value: _propTypes2.default.arrayOf(_propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number, _propTypes2.default.bool])),
  level: _propTypes2.default.number,
  onChange: _propTypes2.default.func
};
exports.default = ArrayOfPrimitivesInput;