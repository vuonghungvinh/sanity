'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _get2 = require('lodash/get');

var _get3 = _interopRequireDefault(_get2);

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _client = require('part:@sanity/base/client');

var _client2 = _interopRequireDefault(_client);

var _default = require('part:@sanity/components/buttons/default');

var _default2 = _interopRequireDefault(_default);

var _SelectAsset = require('./SelectAsset.css');

var _SelectAsset2 = _interopRequireDefault(_SelectAsset);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var PER_PAGE = 200;

/*:: type Asset = {
  _id: string,
  url: string
}*/
/*:: type State = {
  assets: Array<Asset>,
  isLastPage: boolean
}*/
/*:: type Props = {
  onSelect: Asset => void
}*/


function createQuery() {
  var start = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
  var end = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : PER_PAGE;

  return '*[_type == "sanity.imageAsset"] | order(_updatedAt desc) [' + start + '...' + end + '] {_id,url,metadata {dimensions}}';
}

var SelectAsset = function (_React$Component) {
  _inherits(SelectAsset, _React$Component);

  function SelectAsset() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, SelectAsset);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = SelectAsset.__proto__ || Object.getPrototypeOf(SelectAsset)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      assets: [],
      isLastPage: false
    }, _this.pageNo = 0, _this.handleSelectItem = function (event /*: SyntheticEvent<*>*/) {
      var assetId = event.currentTarget.getAttribute('data-id');
      var selected = _this.state.assets.find(function (doc) {
        return doc._id === assetId;
      });
      if (selected) {
        _this.props.onSelect(selected);
      }
    }, _this.handleFetchNextPage = function () {
      _this.fetchPage(++_this.pageNo);
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(SelectAsset, [{
    key: 'fetchPage',
    value: function fetchPage(pageNo /*: number*/) {
      var _this2 = this;

      var start = pageNo * PER_PAGE;
      var end = start + PER_PAGE;
      return _client2.default.fetch(createQuery(start, end)).then(function (result) {
        _this2.setState(function (prevState) {
          return {
            isLastPage: result.length === 0,
            assets: prevState.assets.concat(result)
          };
        });
      });
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.fetchPage(this.pageNo);
    }
  }, {
    key: 'render',
    value: function render() {
      var _this3 = this;

      var _state = this.state,
          assets = _state.assets,
          isLastPage = _state.isLastPage;

      return _react2.default.createElement(
        'div',
        { className: _SelectAsset2.default.root },
        _react2.default.createElement(
          'div',
          { className: _SelectAsset2.default.imageList },
          assets.map(function (asset) {
            var size = 75;
            var width = (0, _get3.default)(asset, 'metadata.dimensions.width') || 100;
            var height = (0, _get3.default)(asset, 'metadata.dimensions.height') || 100;
            return _react2.default.createElement(
              'div',
              {
                key: asset._id,
                className: _SelectAsset2.default.item,
                'data-id': asset._id,
                onClick: _this3.handleSelectItem,
                style: { width: width * size / height + 'px', flexGrow: '' + width * size / height }
              },
              _react2.default.createElement('i', { className: _SelectAsset2.default.padder, style: { paddingBottom: height / width * 100 + '%' } }),
              _react2.default.createElement('img', { src: asset.url + '?w=100', className: _SelectAsset2.default.image })
            );
          })
        ),
        _react2.default.createElement(
          'div',
          { className: _SelectAsset2.default.loadMore },
          isLastPage ? _react2.default.createElement(
            'span',
            null,
            'Nothing more to load\u2026'
          ) : _react2.default.createElement(
            _default2.default,
            { onClick: this.handleFetchNextPage },
            'Load more\u2026'
          )
        )
      );
    }
  }]);

  return SelectAsset;
}(_react2.default.Component);

exports.default = SelectAsset;