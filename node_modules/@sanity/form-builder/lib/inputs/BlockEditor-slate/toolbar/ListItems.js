'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.listItem = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _formatListBulletedIcon = require('part:@sanity/base/format-list-bulleted-icon');

var _formatListBulletedIcon2 = _interopRequireDefault(_formatListBulletedIcon);

var _formatListNumberedIcon = require('part:@sanity/base/format-list-numbered-icon');

var _formatListNumberedIcon2 = _interopRequireDefault(_formatListNumberedIcon);

var _sanityLogoIcon = require('part:@sanity/base/sanity-logo-icon');

var _sanityLogoIcon2 = _interopRequireDefault(_sanityLogoIcon);

var _button = require('part:@sanity/components/toggles/button');

var _button2 = _interopRequireDefault(_button);

var _ListItems = require('./styles/ListItems.css');

var _ListItems2 = _interopRequireDefault(_ListItems);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var listItem = exports.listItem = _propTypes2.default.shape({
  active: _propTypes2.default.bool,
  type: _propTypes2.default.string,
  title: _propTypes2.default.string
});

var ListItem = function (_React$Component) {
  _inherits(ListItem, _React$Component);

  function ListItem() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, ListItem);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ListItem.__proto__ || Object.getPrototypeOf(ListItem)).call.apply(_ref, [this].concat(args))), _this), _this.renderButton = function (listFormat) {
      var onClick = function onClick(event) {
        _this.props.onClick(listFormat.type, listFormat.active);
      };
      var Icon = _this.getIcon(listFormat.type);
      return _react2.default.createElement(
        _button2.default,
        {
          key: 'listButton' + listFormat.type,
          selected: listFormat.active,
          onClick: onClick,
          title: listFormat.title
        },
        _react2.default.createElement(
          'div',
          { className: _ListItems2.default.iconContainer },
          _react2.default.createElement(Icon, null)
        )
      );
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(ListItem, [{
    key: 'getIcon',
    value: function getIcon(type) {
      switch (type) {
        case 'number':
          return _formatListNumberedIcon2.default;
        case 'bullet':
          return _formatListBulletedIcon2.default;
        default:
          return _sanityLogoIcon2.default;
      }
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'div',
        { className: _ListItems2.default.root },
        this.props.listItems.map(this.renderButton)
      );
    }
  }]);

  return ListItem;
}(_react2.default.Component);

ListItem.propTypes = {
  onClick: _propTypes2.default.func,
  listItems: _propTypes2.default.arrayOf(listItem)
};
exports.default = ListItem;