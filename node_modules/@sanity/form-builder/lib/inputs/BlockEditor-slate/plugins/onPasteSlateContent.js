'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _slate = require('slate');

var _randomKey = require('../util/randomKey');

var _randomKey2 = _interopRequireDefault(_randomKey);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function formBuilderNodeOnPaste(formBuilder, editorFields) {

  function processNode(node) {

    if (!node.get('nodes')) {
      return node;
    }

    var newKey = (0, _randomKey2.default)(12);

    var SlateType = node.constructor;
    var newData = node.get('data') ? node.get('data').toObject() : undefined;
    if (newData && newData.value && newData.value._key) {
      newData.value._key = newKey;
    }
    return new SlateType({
      data: _slate.Data.create(newData),
      isVoid: node.get('isVoid'),
      key: newKey,
      nodes: node.get('nodes').map(processNode),
      type: node.get('type')
    });
  }

  function onPaste(event, data, change) {
    if (typeof data.fragment === 'undefined' || data.fragment === null) {
      return null;
    }
    var newNodesList = _slate.Block.createList(data.fragment.nodes.toArray().map(processNode));
    var newDoc = new _slate.Document({
      key: data.fragment.key,
      nodes: newNodesList
    });
    return change.insertFragment(newDoc);
  }

  return {
    onPaste: onPaste
  };
}

exports.default = formBuilderNodeOnPaste;