'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _uniqueId2 = require('lodash/uniqueId');

var _uniqueId3 = _interopRequireDefault(_uniqueId2);

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

var _reactDatepicker = require('react-datepicker');

var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

require('react-datepicker/dist/react-datepicker-cssmodules.css');

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _default = require('part:@sanity/components/formfields/default');

var _default2 = _interopRequireDefault(_default);

var _default3 = require('part:@sanity/components/textinputs/default');

var _default4 = _interopRequireDefault(_default3);

var _DateTimeInput = require('./styles/DateTimeInput.css');

var _DateTimeInput2 = _interopRequireDefault(_DateTimeInput);

var _PatchEvent = require('../../PatchEvent');

var _PatchEvent2 = _interopRequireDefault(_PatchEvent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/*:: import type Moment from 'moment'*/ // eslint-disable-line import/no-unassigned-import

/*:: type ParsedOptions = {
  dateFormat: string,
  timeFormat: string,
  timeStep: number,
  calendarTodayLabel: string
}*/
/*:: type SchemaOptions = {
  dateFormat?: string,
  timeFormat?: string,
  timeStep?: number,
  calendarTodayLabel?: string
}*/


var DEFAULT_DATE_FORMAT = 'YYYY-MM-DD';
var DEFAULT_TIME_FORMAT = 'HH:mm';

/*:: type Props = {
  value: string,
  type: {
    name: string,
    title: string,
    description: string,
    options?: SchemaOptions,
    readOnly?: boolean,
  },
  onChange: PatchEvent => void,
  level: number
}*/


function parseOptions() /*: ParsedOptions*/ {
  var options /*: SchemaOptions*/ = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  return {
    dateFormat: options.dateFormat || DEFAULT_DATE_FORMAT,
    timeFormat: options.timeFormat || DEFAULT_TIME_FORMAT,
    timeStep: 'timeStep' in options && Number(options.timeStep) || 15,
    calendarTodayLabel: options.calendarTodayLabel || 'Today'
  };
}

var getFormat = function getFormat(options /*: ParsedOptions*/) {
  return options.dateFormat + ' ' + options.timeFormat;
};

/*:: type State = {
  inputValue: ?string
}*/

var DateInput = function (_React$Component) {
  _inherits(DateInput, _React$Component);

  function DateInput() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, DateInput);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = DateInput.__proto__ || Object.getPrototypeOf(DateInput)).call.apply(_ref, [this].concat(args))), _this), _this.inputId = (0, _uniqueId3.default)('date-input'), _this.state = {
      inputValue: null
    }, _this.handleInputChange = function (event /*: SyntheticEvent<HTMLInputElement>*/) {
      var inputValue = event.currentTarget.value;
      var parsed = (0, _moment2.default)(inputValue, getFormat(parseOptions(_this.props.type.options)), true);
      if (parsed.isValid()) {
        _this.setMoment(parsed);
      } else {
        _this.setState({ inputValue: inputValue });
      }
    }, _this.handleChange = function (nextMoment /*: Moment*/) {
      _this.setState({ inputValue: null });
      if (nextMoment) {
        _this.setMoment(nextMoment);
      } else {
        _this.unset();
      }
    }, _this.handleBlur = function () {
      _this.setState({ inputValue: null });
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(DateInput, [{
    key: 'setMoment',
    value: function setMoment(nextMoment /*: Moment*/) {
      this.set(nextMoment.toDate().toJSON());
      this.setState({ inputValue: null });
    }
  }, {
    key: 'set',
    value: function set(value /*: string*/) {
      this.props.onChange(_PatchEvent2.default.from([(0, _PatchEvent.set)(value)]));
    }
  }, {
    key: 'unset',
    value: function unset() {
      this.props.onChange(_PatchEvent2.default.from([(0, _PatchEvent.unset)()]));
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          value = _props.value,
          type = _props.type,
          level = _props.level;
      var inputValue = this.state.inputValue;
      var title = type.title,
          description = type.description,
          readOnly = type.readOnly;


      var momentValue /*: ?Moment*/ = value ? (0, _moment2.default)(value) : null;

      var options = parseOptions(type.options);

      var placeholder = type.placeholder || 'e.g. ' + (0, _moment2.default)().format(getFormat(options));

      return _react2.default.createElement(
        _default2.default,
        { labelFor: this.inputId, label: title, level: level, description: description },
        readOnly ? _react2.default.createElement(_default4.default, {
          readOnly: true,
          value: momentValue && momentValue.format(getFormat(options))
        }) : _react2.default.createElement(
          'div',
          { className: _DateTimeInput2.default.root },
          _react2.default.createElement(_reactDatepicker2.default, _extends({}, options, {
            showMonthDropdown: true,
            showYearDropdown: true,
            todayButton: options.calendarTodayLabel,
            selected: momentValue || undefined,
            placeholderText: placeholder,
            calendarClassName: _DateTimeInput2.default.datepicker,
            className: _DateTimeInput2.default.input,
            onChange: this.handleChange,
            onChangeRaw: this.handleInputChange,
            value: inputValue ? inputValue : momentValue && momentValue.format(getFormat(options)),
            showTimeSelect: true,
            disabledKeyboardNavigation: true,
            dateFormat: options.dateFormat,
            timeFormat: options.timeFormat,
            timeIntervals: options.timeStep,
            onBlur: this.handleBlur
          }))
        )
      );
    }
  }]);

  return DateInput;
}(_react2.default.Component);

exports.default = DateInput;