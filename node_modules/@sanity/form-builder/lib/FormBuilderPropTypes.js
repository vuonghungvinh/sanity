'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// todo: fix issue with type being a cicular proptype. Should probably replace all this with flowtypes

function lazy(fn) {
  var cachedFn = void 0;
  return function () {
    return (cachedFn || (cachedFn = fn())).apply(undefined, arguments);
  };
}

var field = _propTypes2.default.shape({
  name: _propTypes2.default.string,
  type: _propTypes2.default.object
});

var type = _propTypes2.default.shape({
  name: _propTypes2.default.string,
  title: _propTypes2.default.string,
  description: _propTypes2.default.string,
  placeholder: _propTypes2.default.string,
  type: lazy(function () {
    return type;
  }),
  to: lazy(function () {
    return _propTypes2.default.arrayOf(type);
  }),
  fields: lazy(function () {
    return _propTypes2.default.arrayOf(field);
  }),
  of: lazy(function () {
    return _propTypes2.default.arrayOf(type);
  })
});

var schema = _propTypes2.default.shape({
  name: _propTypes2.default.string,
  fields: _propTypes2.default.arrayOf(type)
});

exports.default = {
  type: type,
  field: field,
  schema: schema
};