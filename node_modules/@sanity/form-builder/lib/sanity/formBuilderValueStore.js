'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; //  weak


exports.checkout = checkout;

var _document = require('part:@sanity/base/datastore/document');

var _document2 = _interopRequireDefault(_document);

var _gradientPatchAdapter = require('./utils/gradientPatchAdapter');

var _gradientPatchAdapter2 = _interopRequireDefault(_gradientPatchAdapter);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function checkout(documentId) {

  var document = _document2.default.checkout(documentId);

  var events$ = document.events.map(function (event) {
    return event.type === 'mutation' ? preparePatchEvent(event) : event;
  }).scan(function (prevEvent, currentEvent) {

    var deletedSnapshot = prevEvent && currentEvent.type === 'mutation' && prevEvent.document !== null && currentEvent.document === null ? prevEvent.document : null;

    return _extends({}, currentEvent, {
      deletedSnapshot: deletedSnapshot
    });
  }, null);

  function preparePatchEvent(event) {
    var patches = event.mutations.map(function (mut) {
      return mut.patch;
    }).filter(Boolean);
    return _extends({}, event, {
      patches: _gradientPatchAdapter2.default.toFormBuilder(event.origin, patches)
    });
  }

  return _extends({}, document, {
    events: events$,
    patch: function patch(patches /*: Array<Patch>*/) {
      document.patch(_gradientPatchAdapter2.default.fromFormBuilder(patches));
    }
  });
}