'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _get2 = require('lodash/get');

var _get3 = _interopRequireDefault(_get2);

exports.default = resolveUploader;

var _attrAccept = require('attr-accept');

var _attrAccept2 = _interopRequireDefault(_attrAccept);

var _uploaders = require('./uploaders');

var _uploaders2 = _interopRequireDefault(_uploaders);

var _is = require('../../utils/is');

var is = _interopRequireWildcard(_is);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*:: import type {Uploader} from './typedefs'*/
/*:: import type {Type} from '../../typedefs'*/
function resolveUploader(type /*: Type*/, file /*: File*/) /*: ?Uploader*/ {
  return _uploaders2.default.find(function (uploader) {
    return is.type(uploader.type, type) && (0, _attrAccept2.default)(file, uploader.accepts) && (0, _attrAccept2.default)(file, (0, _get3.default)(type.options, 'accept') || '');
  });
}