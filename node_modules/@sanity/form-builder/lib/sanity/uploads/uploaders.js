'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _uploadImage = require('./uploadImage');

var _uploadImage2 = _interopRequireDefault(_uploadImage);

var _uploadFile = require('./uploadFile');

var _uploadFile2 = _interopRequireDefault(_uploadFile);

var _patches = require('../../utils/patches');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*:: import type {Uploader, UploaderDef} from './typedefs'*/
/*:: import type {Type} from '../../typedefs'*/


var UPLOAD_IMAGE /*: UploaderDef*/ = {
  type: 'image',
  accepts: 'image/*',
  upload: function upload(file /*: File*/, type /*: Type*/) {
    return (0, _uploadImage2.default)(file);
  }
};

var UPLOAD_FILE /*: UploaderDef*/ = {
  type: 'file',
  accepts: '',
  upload: function upload(file /*: File*/, type /*: Type*/) {
    return (0, _uploadFile2.default)(file);
  }
};

var UPLOAD_TEXT /*: UploaderDef*/ = {
  type: 'string',
  accepts: 'text/*',
  upload: function upload(file /*: File*/, type /*: Type*/) {
    return (0, _uploadFile2.default)(file).map(function (content) {
      return {
        patches: [(0, _patches.set)(content)]
      };
    });
  }

  // Todo: make it possible to register custom uploaders
};var uploaders /*: Array<Uploader>*/ = [UPLOAD_IMAGE, UPLOAD_TEXT, UPLOAD_FILE].map(function (uploader, i) {
  return _extends({}, uploader, {
    priority: i
  });
});

exports.default = uploaders;