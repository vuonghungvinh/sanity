'use strict';

var _require = require('lodash'),
    get = _require.get,
    unset = _require.unset;

var _require2 = require('@sanity/mutator'),
    extractWithPath = _require2.extractWithPath;

var serializePath = require('./serializePath');

var assetKey = '_sanityAsset';
var assetMatcher = /^(file|image)@([a-z]+:\/\/.*)/;

// Note: mutates in-place
function unsetAssetRefs(doc) {
  findAssetRefs(doc).forEach(function (path) {
    unset(doc, path);
  });

  return doc;
}

function getAssetRefs(doc) {
  return findAssetRefs(doc).map(function (path) {
    return {
      documentId: doc._id,
      path: serializePath({ path: path.filter(isNotAssetKey) }),
      url: get(doc, path).replace(assetMatcher, '$2'),
      type: get(doc, path).replace(assetMatcher, '$1')
    };
  });
}

function isNotAssetKey(segment) {
  return segment !== assetKey;
}

function findAssetRefs(doc) {
  return extractWithPath(`..[${assetKey}]`, doc).map(function (match) {
    return match.path;
  });
}

exports.getAssetRefs = getAssetRefs;
exports.unsetAssetRefs = unsetAssetRefs;