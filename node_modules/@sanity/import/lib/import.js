'use strict';

var importDocuments = function () {
  var _ref = _asyncToGenerator(function* (input, opts) {
    var options = validateOptions(input, opts);

    options.onProgress({ step: 'Reading/validating data file' });
    var isStream = typeof input.pipe === 'function';
    var documents = input;
    if (isStream) {
      debug('Streaming input source to array of documents');
      documents = yield streamToArray(input);
    } else {
      documents.some(documentHasErrors.validate);
    }

    // Assign document IDs for document that do not have one. This is necessary
    // for us to strengthen references and import assets properly.
    var ided = documents.map(function (doc) {
      return assignDocumentId(doc);
    });

    // User might not have applied `_key` on array elements which are objects;
    // if this is the case, generate random keys to help realtime engine
    var keyed = ided.map(function (doc) {
      return assignArrayKeys(doc);
    });

    // Sanity prefers to have a `_type` on every object. Make sure references
    // has `_type` set to `reference`.
    var docs = keyed.map(function (doc) {
      return setTypeOnReferences(doc);
    });

    // Find references that will need strengthening when import is done
    var strongRefs = docs.map(getStrongRefs).filter(Boolean);

    // Extract asset references from the documents
    var assetRefs = flatten(docs.map(getAssetRefs).filter(function (ref) {
      return ref.length;
    }));

    // Remove asset references from the documents
    var assetless = docs.map(unsetAssetRefs);

    // Make strong references weak so they can be imported in any order
    var weakened = assetless.map(weakenStrongRefs);

    // Create batches of documents to import. Try to keep batches below a certain
    // byte-size (since document may vary greatly in size depending on type etc)
    var batches = batchDocuments(weakened);

    // Trigger actual import process
    debug('Starting import of documents');
    var docsImported = yield importBatches(batches, options);

    // Documents are imported, now proceed with post-import operations
    debug('Uploading assets');
    yield uploadAssets(assetRefs, options);

    // Strengthen references
    debug('Strengthening references');
    yield strengthenReferences(strongRefs, options);

    // Return number of documents imported
    return docsImported;
  });

  return function importDocuments(_x, _x2) {
    return _ref.apply(this, arguments);
  };
}();

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

var debug = require('debug')('sanity:import');
var flatten = require('lodash/flatten');
var validateOptions = require('./validateOptions');
var streamToArray = require('./streamToArray');

var _require = require('./assetRefs'),
    getAssetRefs = _require.getAssetRefs,
    unsetAssetRefs = _require.unsetAssetRefs;

var assignArrayKeys = require('./assignArrayKeys');
var assignDocumentId = require('./assignDocumentId');
var uploadAssets = require('./uploadAssets');
var documentHasErrors = require('./documentHasErrors');
var batchDocuments = require('./batchDocuments');
var importBatches = require('./importBatches');

var _require2 = require('./references'),
    getStrongRefs = _require2.getStrongRefs,
    weakenStrongRefs = _require2.weakenStrongRefs,
    setTypeOnReferences = _require2.setTypeOnReferences,
    strengthenReferences = _require2.strengthenReferences;

module.exports = importDocuments;