"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var IncPatch = function () {
  function IncPatch(id, path, value) {
    _classCallCheck(this, IncPatch);

    this.path = path;
    this.value = value;
    this.id = id;
  }

  _createClass(IncPatch, [{
    key: "apply",
    value: function apply(targets, accessor) {
      var _this = this;

      var result = accessor;
      targets.forEach(function (target) {
        if (target.isIndexReference()) {
          target.toIndicies(accessor).forEach(function (i) {
            var previousValue = result.getIndex(i).get();
            result = result.setIndex(i, previousValue + _this.value);
          });
        } else if (target.isAttributeReference()) {
          var previousValue = result.getAttribute(target.name()).get();
          result = result.setAttribute(target.name(), previousValue + _this.value);
        } else {
          throw new Error("Unable to apply to target " + target.toString());
        }
      });
      return result;
    }
  }]);

  return IncPatch;
}();

exports.default = IncPatch;