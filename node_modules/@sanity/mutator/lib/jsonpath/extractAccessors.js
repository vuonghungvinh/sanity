'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _compact2 = require('lodash/compact');

var _compact3 = _interopRequireDefault(_compact2);

exports.default = extract;

var _PlainProbe = require('./PlainProbe');

var _PlainProbe2 = _interopRequireDefault(_PlainProbe);

var _jsonpath = require('../jsonpath');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function extract(path, value) {
  var result = [];
  var appendResult = function appendResult(values) {
    result.push.apply(result, _toConsumableArray(values));
  };
  var matcher = _jsonpath.Matcher.fromPath(path).setPayload(appendResult);
  var accessor = new _PlainProbe2.default(value);
  descend(matcher, accessor);
  return result;
}

function descend(matcher, accessor) {
  var _matcher$match = matcher.match(accessor),
      leads = _matcher$match.leads,
      delivery = _matcher$match.delivery;

  leads.forEach(function (lead) {
    accessorsFromTarget(lead.target, accessor).forEach(function (childAccessor) {
      descend(lead.matcher, childAccessor);
    });
  });
  if (delivery) {
    delivery.targets.forEach(function (target) {
      delivery.payload(accessorsFromTarget(target, accessor));
    });
  }
}

function accessorsFromTarget(target, accessor) {
  var result = [];
  if (target.isIndexReference()) {
    target.toIndicies(accessor).forEach(function (i) {
      result.push(accessor.getIndex(i));
    });
  } else if (target.isAttributeReference()) {
    result.push(accessor.getAttribute(target.name()));
  } else if (target.isSelfReference()) {
    result.push(accessor);
  } else {
    throw new Error('Unable to derive accessor for target ' + target.toString());
  }
  return (0, _compact3.default)(result);
}