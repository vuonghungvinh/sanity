'use strict';

var _random2 = require('lodash/random');

var _random3 = _interopRequireDefault(_random2);

var _range2 = require('lodash/range');

var _range3 = _interopRequireDefault(_range2);

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _storybook = require('part:@sanity/storybook');

var _grid = require('part:@sanity/components/lists/grid');

var _sortableGrid = require('part:@sanity/components/lists/sortable-grid');

var _card = require('part:@sanity/components/previews/card');

var _card2 = _interopRequireDefault(_card);

var _media = require('part:@sanity/components/previews/media');

var _media2 = _interopRequireDefault(_media);

var _reactSortableHoc = require('react-sortable-hoc');

var _chance = require('chance');

var _chance2 = _interopRequireDefault(_chance);

var _knobs = require('part:@sanity/storybook/addons/knobs');

var _sanity = require('part:@sanity/storybook/addons/sanity');

var _sanity2 = _interopRequireDefault(_sanity);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint-disable react/no-multi-comp */


var chance = new _chance2.default();

var containerStyle = {
  width: '90%',
  height: '90%',
  boxShadow: '0 0 10px #999',
  overflow: 'auto',
  position: 'fixed',
  top: '50%',
  left: '50%',
  transform: 'translateX(-50%) translateY(-50%)'
};

var SortableGridTester = function (_React$Component) {
  _inherits(SortableGridTester, _React$Component);

  function SortableGridTester(props, args) {
    _classCallCheck(this, SortableGridTester);

    var _this = _possibleConstructorReturn(this, (SortableGridTester.__proto__ || Object.getPrototypeOf(SortableGridTester)).call(this, props, args));

    _this.handleOnSort = function (_ref) {
      var oldIndex = _ref.oldIndex,
          newIndex = _ref.newIndex;
      var items = _this.state.items;

      _this.setState({
        items: (0, _reactSortableHoc.arrayMove)(items, oldIndex, newIndex)
      });
      _this.props.onSort();
    };

    _this.state = {
      items: _this.props.items.slice()
    };
    return _this;
  }

  _createClass(SortableGridTester, [{
    key: 'render',
    value: function render() {
      var items = this.state.items;
      var Preview = this.props.renderWith;


      return _react2.default.createElement(
        _sortableGrid.List,
        {
          onSort: this.handleOnSort },
        items.map(function (item, index) {
          return _react2.default.createElement(
            _sortableGrid.Item,
            { key: item.key, index: index },
            _react2.default.createElement(_sortableGrid.DragHandle, null),
            _react2.default.createElement(Preview, { item: item })
          );
        })
      );
    }
  }]);

  return SortableGridTester;
}(_react2.default.Component);

(0, _storybook.storiesOf)('List (grid)').addDecorator(_knobs.withKnobs).add('MediaPreview', function () {
  var items = (0, _range3.default)(50).map(function (item, i) {
    var width = (0, _random3.default)(10, 80) * 10;
    var height = (0, _random3.default)(10, 50) * 10;
    var randomImage = 'http://placekitten.com/' + width + '/' + height;
    return {
      key: '' + i,
      title: chance.name(),
      imageUrl: randomImage,
      aspect: width / height
    };
  });
  return _react2.default.createElement(
    _sanity2.default,
    { part: 'part:@sanity/components/lists/grid', propTables: [_grid.List] },
    _react2.default.createElement(
      _grid.List,
      null,
      items.map(function (item) {
        return _react2.default.createElement(
          _grid.Item,
          { key: item.key },
          _react2.default.createElement(_media2.default, { item: item })
        );
      })
    )
  );
}).add('MediaPreview (sortable)', function () {
  var items = (0, _range3.default)(50).map(function (item, i) {
    var width = (0, _random3.default)(10, 80) * 10;
    var height = (0, _random3.default)(10, 50) * 10;
    var randomImage = 'http://placekitten.com/' + width + '/' + height;
    return {
      key: '' + i,
      title: chance.name(),
      imageUrl: randomImage,
      aspect: width / height
    };
  });
  return _react2.default.createElement(
    _sanity2.default,
    { part: 'part:@sanity/components/lists/grid', propTables: [_grid.List] },
    _react2.default.createElement(
      'div',
      { style: containerStyle },
      _react2.default.createElement(SortableGridTester, { items: items, renderWith: _media2.default })
    )
  );
}, {
  propTables: [_grid.List],
  role: 'part:@sanity/components/lists/grid'
}).add('Cards', function () {

  var items = (0, _range3.default)(50).map(function (item, i) {
    var width = 300;
    var height = 120;
    var randomImage = 'http://placekitten.com/' + width + '/' + height;
    return {
      key: '' + i,
      title: chance.name(),
      subtitle: chance.sentence(),
      description: chance.sentence(1),
      media: _react2.default.createElement('img', { src: randomImage, height: height, width: width })
    };
  });

  return _react2.default.createElement(
    _sanity2.default,
    { part: 'part:@sanity/components/lists/grid', propTables: [_grid.List] },
    _react2.default.createElement(
      _grid.List,
      null,
      items.map(function (item) {
        return _react2.default.createElement(
          _grid.Item,
          { key: item.key },
          _react2.default.createElement(_card2.default, { item: item })
        );
      })
    )
  );
});