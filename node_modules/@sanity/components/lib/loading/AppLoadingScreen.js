'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _sanityLogoIcon = require('part:@sanity/base/sanity-logo-icon');

var _sanityLogoIcon2 = _interopRequireDefault(_sanityLogoIcon);

var _spinnerIcon = require('part:@sanity/base/spinner-icon');

var _spinnerIcon2 = _interopRequireDefault(_spinnerIcon);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var AppLoadingScreenStyles = '\n@-webkit-keyframes sanity-app-loader__spin {\n  0% {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n  }\n\n  100% {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg);\n  }\n}\n@keyframes sanity-app-loader__spin {\n  0% {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n  }\n\n  100% {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg);\n  }\n}\n@-webkit-keyframes sanity-app-loading-screen__colorFade {\n  0% {\n    fill: #383838;\n    opacity: 100%;\n  }\n\n  30% {\n    fill: #383838;\n    opacity: 50%;\n  }\n\n  60% {\n    fill: #2097ac;\n    opacity: 70%;\n  }\n\n  90% {\n    fill: #f43;\n    opacity: 10%;\n  }\n}\n\n@keyframes sanity-app-loading-screen__colorFade {\n  0% {\n    fill: #383838;\n    opacity: 100%;\n  }\n\n  30% {\n    fill: #383838;\n    opacity: 50%;\n  }\n\n  60% {\n    fill: #2097ac;\n    opacity: 70%;\n  }\n\n  90% {\n    fill: #f43;\n    opacity: 10%;\n  }\n}\n\n.sanity-app-loading-screen__root {\n  display: block;\n}\n\n.sanity-app-loading-screen__inner {\n  position: fixed;\n  top: 50vh;\n  left: 50vw;\n  -webkit-transform: translateX(-50%) translateY(-50%);\n          transform: translateX(-50%) translateY(-50%);\n  text-align: center;\n}\n\n.sanity-app-loading-screen__logo {\n  font-size: 5em;\n  color: #383838;\n}\n\n.sanity-app-loading-screen__logo .sanityIconAnimate path:nth-child(odd) {\n  -webkit-animation-name: sanity-app-loading-screen__colorFade;\n          animation-name: sanity-app-loading-screen__colorFade;\n  -webkit-animation-duration: 5s;\n          animation-duration: 5s;\n  -webkit-animation-duration: 5s;\n          animation-duration: 5s;\n  -webkit-animation-iteration-count: infinite;\n          animation-iteration-count: infinite;\n  -webkit-animation-direction: alternate;\n          animation-direction: alternate;\n}\n\n.sanity-app-loading-screen__logo .sanityIconAnimate path:nth-child(even) {\n  -webkit-animation-name: sanity-app-loading-screen__colorFade;\n          animation-name: sanity-app-loading-screen__colorFade;\n  -webkit-animation-duration: 5s;\n          animation-duration: 5s;\n  -webkit-animation-duration: 5s;\n          animation-duration: 5s;\n  -webkit-animation-iteration-count: infinite;\n          animation-iteration-count: infinite;\n  -webkit-animation-direction: alternate-reverse;\n          animation-direction: alternate-reverse;\n}\n\n.sanity-app-loading-screen__text {\n  font-weight: 400\n  font-size: 5em;\n  font-family: sans-serif;\n}\n\n.sanity-app-loading-screen__spinner {\n  display: block;\n  z-index: 1;\n  position: fixed;\n  top: 75vh;\n  left: 50vw;\n  -webkit-transform: translateX(-50%);\n          transform: translateX(-50%);\n}\n.sanity-app-loader__spinner-inner {\n  position: absolute;\n  height: 1em;\n  width: 1em;\n}\n\n.sanity-app-loader__spinner-inner svg {\n  -webkit-transform-origin: center center;\n          transform-origin: center center;\n  -webkit-animation-name: sanity-app-loader__spin;\n          animation-name: sanity-app-loader__spin;\n  -webkit-animation-duration: 2s;\n          animation-duration: 2s;\n  -webkit-animation-timing-function: linear;\n          animation-timing-function: linear;\n  -webkit-animation-iteration-count: infinite;\n          animation-iteration-count: infinite;\n}\n';

var AppLoadingScreen = function (_React$Component) {
  _inherits(AppLoadingScreen, _React$Component);

  function AppLoadingScreen() {
    _classCallCheck(this, AppLoadingScreen);

    return _possibleConstructorReturn(this, (AppLoadingScreen.__proto__ || Object.getPrototypeOf(AppLoadingScreen)).apply(this, arguments));
  }

  _createClass(AppLoadingScreen, [{
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'div',
        { className: 'sanity-app-loading-screen' },
        _react2.default.createElement(
          'style',
          { type: 'text/css' },
          AppLoadingScreenStyles
        ),
        _react2.default.createElement(
          'div',
          { className: 'sanity-app-loading-screen__inner' },
          _react2.default.createElement(
            'div',
            { className: 'sanity-app-loading-screen__logo' },
            _react2.default.createElement(_sanityLogoIcon2.default, null)
          ),
          _react2.default.createElement(
            'div',
            { className: 'sanity-app-loading-screen__text' },
            this.props.text
          )
        ),
        _react2.default.createElement(
          'div',
          { className: 'sanity-app-loading-screen__spinner' },
          _react2.default.createElement(
            'div',
            { className: 'sanity-app-loader__spinner-inner' },
            _react2.default.createElement(_spinnerIcon2.default, null)
          )
        )
      );
    }
  }]);

  return AppLoadingScreen;
}(_react2.default.Component);

AppLoadingScreen.propTypes = {
  text: _propTypes2.default.string
};
AppLoadingScreen.defaultProps = {
  text: 'Restoring sanityâ€¦'
};
exports.default = AppLoadingScreen;