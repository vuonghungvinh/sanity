'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _defaultStyle = require('part:@sanity/components/menus/default-style');

var _defaultStyle2 = _interopRequireDefault(_defaultStyle);

var _reactInk = require('react-ink');

var _reactInk2 = _interopRequireDefault(_reactInk);

var _router = require('part:@sanity/base/router');

var _reactClickOutside = require('react-click-outside');

var _reactClickOutside2 = _interopRequireDefault(_reactClickOutside);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var StateMenu = function (_React$Component) {
  _inherits(StateMenu, _React$Component);

  function StateMenu() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, StateMenu);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = StateMenu.__proto__ || Object.getPrototypeOf(StateMenu)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      selectedItem: null
    }, _this.handleClickOutside = function () {
      _this.props.onClickOutside();
    }, _this.handleKeyDown = function (event) {
      var items = _this.props.items;
      var selectedItem = _this.state.selectedItem;

      var currentIndex = items.indexOf(selectedItem) || 0;

      if (event.key == 'Escape' && _this.props.opened) {
        _this.props.onClose();
      }

      if (event.key == 'ArrowDown' && _this.props.opened && currentIndex < items.length - 1) {
        _this.setState({
          selectedItem: _this.props.items[currentIndex + 1]
        });
      }

      if (event.key == 'ArrowUp' && _this.props.opened && currentIndex > 0) {
        _this.setState({
          selectedItem: _this.props.items[currentIndex - 1]
        });
      }

      if (event.key == 'Enter' && _this.props.opened && _this.state.selectedItem) {
        var router = _this.props.router; // todo: this should not be here

        router.navigate(selectedItem.linkState);
      }
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(StateMenu, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      window.addEventListener('keydown', this.handleKeyDown, false);
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      window.removeEventListener('keydown', this.handleKeyDown, false);
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          items = _props.items,
          origin = _props.origin,
          ripple = _props.ripple,
          fullWidth = _props.fullWidth,
          className = _props.className;

      var originStyle = _defaultStyle2.default['origin__' + origin];

      return _react2.default.createElement(
        'div',
        { className: (this.props.opened ? _defaultStyle2.default.opened : _defaultStyle2.default.closed) + ' ' + originStyle + ' ' + (fullWidth && _defaultStyle2.default.fullWidth) + ' ' + className },
        _react2.default.createElement(
          'ul',
          { className: _defaultStyle2.default.list },
          items.map(function (item, i) {
            var Icon = item.icon;
            return _react2.default.createElement(
              'li',
              { key: i, className: _defaultStyle2.default.item + ' ' + (item.divider && _defaultStyle2.default.divider) },
              _react2.default.createElement(
                _router.StateLink,
                {
                  state: item.linkState,
                  className: _defaultStyle2.default.link
                },
                Icon && _react2.default.createElement(
                  'span',
                  { className: _defaultStyle2.default.iconContainer },
                  _react2.default.createElement(Icon, { className: _defaultStyle2.default.icon })
                ),
                item.title,
                ripple && _react2.default.createElement(_reactInk2.default, null)
              )
            );
          })
        )
      );
    }
  }]);

  return StateMenu;
}(_react2.default.Component);

StateMenu.propTypes = {
  opened: _propTypes2.default.bool,
  origin: _propTypes2.default.oneOf(['top-left', 'top-right', 'bottom-left', 'bottom-right']),
  ripple: _propTypes2.default.bool,
  fullWidth: _propTypes2.default.bool,
  className: _propTypes2.default.string,
  onClickOutside: _propTypes2.default.func,
  onClose: _propTypes2.default.func,
  router: _propTypes2.default.shape({
    navigate: _propTypes2.default.func
  }),
  items: _propTypes2.default.arrayOf(_propTypes2.default.shape({
    title: _propTypes2.default.string.isRequired,
    icon: _propTypes2.default.func,
    linkState: _propTypes2.default.object.isRequired
  }))
};
StateMenu.defaultProps = {
  menuOpened: false,
  origin: 'top-left',
  icon: false,
  ripple: true,
  onClickOutside: function onClickOutside() {},
  onClose: function onClose() {}
};
exports.default = (0, _router.withRouter)((0, _reactClickOutside2.default)(StateMenu));