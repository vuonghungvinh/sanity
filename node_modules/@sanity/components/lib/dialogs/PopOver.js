'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _PopOver = require('./styles/PopOver.css');

var _PopOver2 = _interopRequireDefault(_PopOver);

var _closeIcon = require('part:@sanity/base/close-icon');

var _closeIcon2 = _interopRequireDefault(_closeIcon);

var _sticky = require('part:@sanity/components/portal/sticky');

var _sticky2 = _interopRequireDefault(_sticky);

var _Stacked = require('../utilities/Stacked');

var _Stacked2 = _interopRequireDefault(_Stacked);

var _CaptureOutsideClicks = require('../utilities/CaptureOutsideClicks');

var _CaptureOutsideClicks2 = _interopRequireDefault(_CaptureOutsideClicks);

var _Escapable = require('../utilities/Escapable');

var _Escapable2 = _interopRequireDefault(_Escapable);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var PADDING = 20;

var PopOver = function (_React$Component) {
  _inherits(PopOver, _React$Component);

  function PopOver() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, PopOver);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = PopOver.__proto__ || Object.getPrototypeOf(PopOver)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      arrowLeft: 0,
      popoverLeft: 0
    }, _this.handleClose = function () {
      _this.props.onClose();
    }, _this.setArrowElement = function (element) {
      _this._arrowElement = element;
    }, _this.setContentElement = function (element) {
      _this._contentElement = element;
    }, _this.setPopoverInnerElement = function (element) {
      _this._popOverInnerElement = element;
    }, _this.setRootElement = function (element) {
      _this._rootElement = element;
    }, _this.handlePortalResize = function (dimensions) {
      if (!_this._popOverInnerElement) {
        return;
      }

      var rootLeft = dimensions.rootLeft,
          availableHeight = dimensions.availableHeight,
          availableWidth = dimensions.availableWidth;


      var width = _this._popOverInnerElement.offsetWidth;

      var popoverLeft = rootLeft - width / 2;

      if (availableWidth < rootLeft + width / 2) {
        popoverLeft = availableWidth - width - PADDING;
      }

      _this.setState({
        popoverLeft: popoverLeft,
        availableHeight: availableHeight,
        arrowLeft: rootLeft
      });
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(PopOver, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          children = _props.children,
          isOpen = _props.isOpen,
          onClose = _props.onClose,
          color = _props.color,
          useOverlay = _props.useOverlay;
      var _state = this.state,
          popoverLeft = _state.popoverLeft,
          arrowLeft = _state.arrowLeft,
          availableHeight = _state.availableHeight;


      return _react2.default.createElement(
        'div',
        { style: { display: 'span' }, ref: this.setRootElement },
        _react2.default.createElement(
          _sticky2.default,
          {
            isOpen: isOpen,
            onResize: this.handlePortalResize,
            useOverlay: useOverlay
          },
          _react2.default.createElement(
            _Stacked2.default,
            null,
            function (isActive) {
              return _react2.default.createElement(
                'div',
                {
                  ref: _this2.setPopoverInnerElement,
                  className: '\n                  ' + _PopOver2.default.root + '\n                  ' + (color === 'danger' ? _PopOver2.default.colorDanger : '') + '\n                  ' + (color === 'warning' ? _PopOver2.default.colorWarning : '') + '\n                  ' + (color === 'info' ? _PopOver2.default.colorInfo : '') + '\n                  ' + (color === 'success' ? _PopOver2.default.colorSuccess : '') + '\n                '
                },
                _react2.default.createElement('div', {
                  className: _PopOver2.default.arrow,
                  ref: _this2.setArrowElement,
                  style: {
                    left: arrowLeft + 'px'
                  }
                }),
                _react2.default.createElement(_Escapable2.default, { onEscape: function onEscape(event) {
                    return (isActive || event.shiftKey) && onClose();
                  } }),
                _react2.default.createElement(
                  _CaptureOutsideClicks2.default,
                  { onClickOutside: isActive ? onClose : null },
                  _react2.default.createElement(
                    'div',
                    {
                      className: _PopOver2.default.popover,
                      style: {
                        left: popoverLeft + 'px'
                      }
                    },
                    _react2.default.createElement(
                      'button',
                      { className: _PopOver2.default.close, type: 'button', onClick: onClose },
                      _react2.default.createElement(_closeIcon2.default, null)
                    ),
                    _react2.default.createElement(
                      'div',
                      {
                        ref: _this2.setContentElement,
                        className: _PopOver2.default.content,
                        style: {
                          maxHeight: availableHeight - PADDING + 'px'
                        }
                      },
                      children
                    )
                  )
                )
              );
            }
          )
        )
      );
    }
  }]);

  return PopOver;
}(_react2.default.Component);

PopOver.propTypes = {
  children: _propTypes2.default.node.isRequired,
  onClose: _propTypes2.default.func,
  isOpen: _propTypes2.default.bool,
  color: _propTypes2.default.oneOf(['default', 'danger', 'success', 'warning', 'info']),
  useOverlay: _propTypes2.default.bool
};
PopOver.defaultProps = {
  color: 'default',
  onClose: function onClose() {},
  // eslint-disable-line
  isOpen: true,
  useOverlay: true
};
exports.default = PopOver;