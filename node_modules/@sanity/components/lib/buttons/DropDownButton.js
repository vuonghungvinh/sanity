'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _omit3 = require('lodash/omit');

var _omit4 = _interopRequireDefault(_omit3);

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _dropdownStyle = require('part:@sanity/components/buttons/dropdown-style');

var _dropdownStyle2 = _interopRequireDefault(_dropdownStyle);

var _default = require('part:@sanity/components/buttons/default');

var _default2 = _interopRequireDefault(_default);

var _angleDownIcon = require('part:@sanity/base/angle-down-icon');

var _angleDownIcon2 = _interopRequireDefault(_angleDownIcon);

var _default3 = require('part:@sanity/components/menus/default');

var _default4 = _interopRequireDefault(_default3);

var _sticky = require('part:@sanity/components/portal/sticky');

var _sticky2 = _interopRequireDefault(_sticky);

var _Stacked = require('../utilities/Stacked');

var _Stacked2 = _interopRequireDefault(_Stacked);

var _Escapable = require('../utilities/Escapable');

var _Escapable2 = _interopRequireDefault(_Escapable);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var DropDownButton = function (_React$PureComponent) {
  _inherits(DropDownButton, _React$PureComponent);

  function DropDownButton() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, DropDownButton);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = DropDownButton.__proto__ || Object.getPrototypeOf(DropDownButton)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      menuOpened: false,
      stickToBottom: true
    }, _this.width = 100, _this.handleClickOutside = function (event) {
      _this.setState({ menuOpened: false });
    }, _this.handleClose = function () {
      _this.setState({ menuOpened: false });
    }, _this.setRootElement = function (element) {
      _this._rootElement = element;
      if (element) {
        _this.width = element.offsetWidth;
      }
    }, _this.setMenuElement = function (element) {
      _this._menuElement = element;
    }, _this.handleOnClick = function (event) {
      _this.setState({
        menuOpened: !_this.state.menuOpened,
        width: event.target.offsetWidth
      });
    }, _this.handleAction = function (item) {
      _this.props.onAction(item);
      _this.handleClose();
    }, _this.handleResize = function (dimensions) {
      var buttonHeight = _this._rootElement.offsetHeight;
      if (_this._menuElement.offsetHeight + buttonHeight < window.innerHeight - dimensions.rootTop) {
        _this.setState({
          stickToBottom: true
        });
        return;
      }
      _this.setState({
        stickToBottom: false
      });
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(DropDownButton, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _omit2 = (0, _omit4.default)(this.props, 'onAction'),
          items = _omit2.items,
          children = _omit2.children,
          kind = _omit2.kind,
          className = _omit2.className,
          origin = _omit2.origin,
          rest = _objectWithoutProperties(_omit2, ['items', 'children', 'kind', 'className', 'origin']);

      var _state = this.state,
          menuOpened = _state.menuOpened,
          width = _state.width,
          stickToBottom = _state.stickToBottom;


      var menuClassName = _dropdownStyle2.default.menu;

      if (stickToBottom && origin === 'right') {
        menuClassName = _dropdownStyle2.default.menuBottomRight;
      }

      if (!stickToBottom && origin === 'right') {
        menuClassName = _dropdownStyle2.default.menuTopRight;
      }

      if (stickToBottom && origin === 'left') {
        menuClassName = _dropdownStyle2.default.menuBottomLeft;
      }

      if (!stickToBottom && origin === 'left') {
        menuClassName = _dropdownStyle2.default.menuTopLeft;
      }

      return _react2.default.createElement(
        'div',
        { ref: this.setRootElement, className: className },
        _react2.default.createElement(
          _default2.default,
          _extends({}, rest, {
            className: '' + _dropdownStyle2.default.root,
            onClick: this.handleOnClick,
            kind: kind
          }),
          _react2.default.createElement(
            'span',
            { className: _dropdownStyle2.default.title },
            children
          ),
          _react2.default.createElement(
            'span',
            { className: _dropdownStyle2.default.arrow },
            _react2.default.createElement(_angleDownIcon2.default, { color: 'inherit' })
          ),
          _react2.default.createElement(
            'span',
            {
              className: '\n              ' + (stickToBottom ? _dropdownStyle2.default.stickyBottom : _dropdownStyle2.default.stickyTop) + '\n              ' + (origin === 'left' ? _dropdownStyle2.default.stickyLeft : _dropdownStyle2.default.stickyRight) + '\n            '
            },
            menuOpened && _react2.default.createElement(
              _Stacked2.default,
              null,
              function (isActive) {
                return _react2.default.createElement(
                  _sticky2.default,
                  {
                    isOpen: true,
                    onResize: _this2.handleResize,
                    onlyBottomSpace: false,
                    useOverlay: false,
                    addPadding: false,
                    scrollIntoView: false
                  },
                  _react2.default.createElement(
                    'div',
                    {
                      ref: _this2.setMenuElement,
                      style: { minWidth: width + 'px' }
                    },
                    _react2.default.createElement(_Escapable2.default, { onEscape: function onEscape(event) {
                        return isActive && _this2.handleClose();
                      } }),
                    _react2.default.createElement(_default4.default, {
                      items: items,
                      isOpen: true,
                      className: menuClassName,
                      onAction: _this2.handleAction,
                      onClickOutside: function onClickOutside(event) {
                        return isActive && _this2.handleClose();
                      }
                    })
                  )
                );
              }
            )
          )
        )
      );
    }
  }]);

  return DropDownButton;
}(_react2.default.PureComponent);

DropDownButton.propTypes = {
  kind: _propTypes2.default.oneOf(['secondary', 'add', 'delete', 'warning', 'success', 'danger', 'simple']),
  items: _propTypes2.default.arrayOf(_propTypes2.default.shape({
    title: _propTypes2.default.string.isRequired,
    icon: _propTypes2.default.func
  })),
  onAction: _propTypes2.default.func.isRequired,
  children: _propTypes2.default.node.isRequired,
  inverted: _propTypes2.default.bool,
  icon: _propTypes2.default.func,
  loading: _propTypes2.default.bool,
  ripple: _propTypes2.default.bool,
  colored: _propTypes2.default.bool,
  color: _propTypes2.default.string,
  className: _propTypes2.default.string,
  origin: _propTypes2.default.oneOf(['left', 'right'])
};
DropDownButton.defaultProps = {
  origin: 'left'
};
exports.default = DropDownButton;