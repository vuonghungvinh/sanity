'use strict';

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _default = require('part:@sanity/components/buttons/default');

var _default2 = _interopRequireDefault(_default);

var _anchor = require('part:@sanity/components/buttons/anchor');

var _anchor2 = _interopRequireDefault(_anchor);

var _dropdown = require('part:@sanity/components/buttons/dropdown');

var _dropdown2 = _interopRequireDefault(_dropdown);

var _default3 = require('part:@sanity/components/formfields/default');

var _default4 = _interopRequireDefault(_default3);

var _inInput = require('part:@sanity/components/buttons/in-input');

var _inInput2 = _interopRequireDefault(_inInput);

var _inInputStyle = require('part:@sanity/components/buttons/in-input-style');

var _inInputStyle2 = _interopRequireDefault(_inInputStyle);

var _storybook = require('part:@sanity/storybook');

var _knobs = require('part:@sanity/storybook/addons/knobs');

var _sanityLogoIcon = require('part:@sanity/base/sanity-logo-icon');

var _sanityLogoIcon2 = _interopRequireDefault(_sanityLogoIcon);

var _default5 = require('part:@sanity/components/textinputs/default');

var _default6 = _interopRequireDefault(_default5);

var _sanity = require('part:@sanity/storybook/addons/sanity');

var _sanity2 = _interopRequireDefault(_sanity);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var getButtonKinds = function getButtonKinds() {
  return (0, _knobs.select)('kind (prop)', ['default', 'simple', 'secondary'], 'default');
};
var getColorKinds = function getColorKinds() {
  return (0, _knobs.select)('color (prop)', [false, 'primary', 'success', 'danger', 'white'], false);
};

(0, _storybook.storiesOf)('Buttons', module).addDecorator(_knobs.withKnobs).add('Default', function () {
  return _react2.default.createElement(
    _sanity2.default,
    { part: 'part:@sanity/components/buttons/default', propTables: [_default2.default] },
    _react2.default.createElement(
      _default2.default,
      {
        kind: getButtonKinds(),
        onClick: (0, _storybook.action)('clicked'),
        disabled: (0, _knobs.boolean)('disabled (prop)', false),
        inverted: (0, _knobs.boolean)('inverted (prop)', false),
        type: (0, _knobs.text)('type (prop)', undefined),
        color: getColorKinds(),
        loading: (0, _knobs.boolean)('Loading (prop)', false),
        icon: (0, _knobs.boolean)('Show test icon', false) ? _sanityLogoIcon2.default : false
      },
      (0, _knobs.text)('prop: children', 'Touch Me!')
    )
  );
}).add('Anchor <a>', function () {
  return _react2.default.createElement(
    _sanity2.default,
    { part: 'part:@sanity/components/buttons/anchor', propTables: [_default2.default] },
    _react2.default.createElement(
      _anchor2.default,
      {
        kind: getButtonKinds(),
        onClick: (0, _storybook.action)('clicked'),
        disabled: (0, _knobs.boolean)('prop: disabled', false),
        inverted: (0, _knobs.boolean)('prop: inverted', false),
        color: getColorKinds(),
        loading: (0, _knobs.boolean)('prop: loading', false),
        icon: (0, _knobs.boolean)('show test icon', false) ? _sanityLogoIcon2.default : false,
        href: (0, _knobs.text)('prop: href', 'http://example.org')
      },
      (0, _knobs.text)('prop: children', 'Touch Me!')
    )
  );
}).add('Examples', function () {
  var disabled = (0, _knobs.boolean)('Disabled', false);
  return _react2.default.createElement(
    'form',
    null,
    _react2.default.createElement(
      'h2',
      null,
      'Default'
    ),
    _react2.default.createElement(
      _default2.default,
      { onClick: (0, _storybook.action)('clicked'), icon: _sanityLogoIcon2.default, disabled: disabled },
      'Default'
    ),
    _react2.default.createElement(
      _default2.default,
      { onClick: (0, _storybook.action)('clicked'), icon: _sanityLogoIcon2.default, inverted: true, disabled: disabled },
      'Inverted'
    ),
    _react2.default.createElement(
      _default2.default,
      { onClick: (0, _storybook.action)('clicked'), icon: _sanityLogoIcon2.default, kind: 'simple', disabled: disabled },
      'Simple'
    ),
    _react2.default.createElement(
      _default2.default,
      { onClick: (0, _storybook.action)('clicked'), kind: 'secondary', icon: _sanityLogoIcon2.default, disabled: disabled },
      'Secondary'
    ),
    _react2.default.createElement(
      'h2',
      null,
      'Colors'
    ),
    _react2.default.createElement(
      _default2.default,
      { onClick: (0, _storybook.action)('clicked'), disabled: disabled },
      'Undefined'
    ),
    _react2.default.createElement(
      _default2.default,
      { onClick: (0, _storybook.action)('clicked'), color: 'primary', disabled: disabled },
      'Primary'
    ),
    _react2.default.createElement(
      _default2.default,
      { onClick: (0, _storybook.action)('clicked'), color: 'danger', disabled: disabled },
      'Danger'
    ),
    _react2.default.createElement(
      _default2.default,
      { onClick: (0, _storybook.action)('clicked'), color: 'success', disabled: disabled },
      'Success'
    ),
    _react2.default.createElement(
      'h2',
      null,
      'Colors (secondary)'
    ),
    _react2.default.createElement(
      _default2.default,
      { onClick: (0, _storybook.action)('clicked'), kind: 'simple', disabled: disabled },
      'Undefined'
    ),
    _react2.default.createElement(
      _default2.default,
      { onClick: (0, _storybook.action)('clicked'), kind: 'secondary', color: 'primary', disabled: disabled },
      'Primary'
    ),
    _react2.default.createElement(
      _default2.default,
      { onClick: (0, _storybook.action)('clicked'), kind: 'secondary', color: 'danger', disabled: disabled },
      'Danger'
    ),
    _react2.default.createElement(
      _default2.default,
      { onClick: (0, _storybook.action)('clicked'), kind: 'secondary', color: 'success', disabled: disabled },
      'Success'
    ),
    _react2.default.createElement(
      'h2',
      null,
      'Colors (inverted)'
    ),
    _react2.default.createElement(
      _default2.default,
      { onClick: (0, _storybook.action)('clicked'), inverted: true, disabled: disabled },
      'Undefined'
    ),
    _react2.default.createElement(
      _default2.default,
      { onClick: (0, _storybook.action)('clicked'), color: 'primary', inverted: true, disabled: disabled },
      'Primary'
    ),
    _react2.default.createElement(
      _default2.default,
      { onClick: (0, _storybook.action)('clicked'), color: 'danger', inverted: true, disabled: disabled },
      'Danger'
    ),
    _react2.default.createElement(
      _default2.default,
      { onClick: (0, _storybook.action)('clicked'), color: 'success', inverted: true, disabled: disabled },
      'Success'
    ),
    _react2.default.createElement(
      'h2',
      null,
      'Colors (simple)'
    ),
    _react2.default.createElement(
      _default2.default,
      { onClick: (0, _storybook.action)('clicked'), kind: 'simple', disabled: disabled },
      'Undefined'
    ),
    _react2.default.createElement(
      _default2.default,
      { onClick: (0, _storybook.action)('clicked'), kind: 'simple', color: 'primary', disabled: disabled },
      'Primary'
    ),
    _react2.default.createElement(
      _default2.default,
      { onClick: (0, _storybook.action)('clicked'), kind: 'simple', color: 'danger', disabled: disabled },
      'Danger'
    ),
    _react2.default.createElement(
      _default2.default,
      { onClick: (0, _storybook.action)('clicked'), kind: 'simple', color: 'success', disabled: disabled },
      'Success'
    ),
    _react2.default.createElement(
      'h2',
      null,
      'Secondary'
    ),
    _react2.default.createElement(
      _default2.default,
      { onClick: (0, _storybook.action)('clicked'), inverted: true, disabled: disabled },
      'Inverted'
    ),
    _react2.default.createElement(
      _default2.default,
      { onClick: (0, _storybook.action)('clicked'), color: 'danger', inverted: true, disabled: disabled },
      'Inverted color:danger'
    ),
    _react2.default.createElement(
      _default2.default,
      { onClick: (0, _storybook.action)('clicked'), color: 'danger', disabled: disabled },
      'Color:danger'
    ),
    _react2.default.createElement(
      'h2',
      null,
      'With icons'
    ),
    _react2.default.createElement(
      _default2.default,
      { onClick: (0, _storybook.action)('clicked'), icon: _sanityLogoIcon2.default, disabled: disabled },
      'With icon'
    ),
    _react2.default.createElement(
      _default2.default,
      { onClick: (0, _storybook.action)('clicked'), color: 'danger', icon: _sanityLogoIcon2.default, disabled: disabled },
      'Colored with icon'
    ),
    _react2.default.createElement(
      _default2.default,
      { onClick: (0, _storybook.action)('clicked'), color: 'danger', icon: _sanityLogoIcon2.default, inverted: true, disabled: disabled },
      'Danger, inverted & icon'
    ),
    _react2.default.createElement(
      'h2',
      null,
      'Only icons'
    ),
    _react2.default.createElement(_default2.default, { onClick: (0, _storybook.action)('clicked'), icon: _sanityLogoIcon2.default, title: 'Default', disabled: disabled }),
    _react2.default.createElement(_default2.default, { onClick: (0, _storybook.action)('clicked'), icon: _sanityLogoIcon2.default, color: 'danger', title: 'Danger', disabled: disabled }),
    _react2.default.createElement(_default2.default, { onClick: (0, _storybook.action)('clicked'), icon: _sanityLogoIcon2.default, inverted: true, title: 'Inverted', disabled: disabled }),
    _react2.default.createElement(_default2.default, { onClick: (0, _storybook.action)('clicked'), icon: _sanityLogoIcon2.default, inverted: true, color: 'danger', title: 'Inverted danger', disabled: disabled }),
    _react2.default.createElement(_default2.default, { onClick: (0, _storybook.action)('clicked'), icon: _sanityLogoIcon2.default, kind: 'simple', title: 'Simple', disabled: disabled }),
    _react2.default.createElement(_default2.default, { onClick: (0, _storybook.action)('clicked'), icon: _sanityLogoIcon2.default, kind: 'simple', color: 'danger', title: 'Simple danger', disabled: disabled }),
    _react2.default.createElement(
      'h2',
      null,
      'On color areas'
    ),
    _react2.default.createElement(
      'div',
      { style: { backgroundColor: 'red', padding: '1rem' } },
      _react2.default.createElement(
        _default2.default,
        { onClick: (0, _storybook.action)('clicked'), color: 'white', disabled: disabled },
        'White'
      ),
      _react2.default.createElement(
        _default2.default,
        { onClick: (0, _storybook.action)('clicked'), kind: 'simple', color: 'white', disabled: disabled },
        'White simple'
      ),
      _react2.default.createElement(
        _default2.default,
        { onClick: (0, _storybook.action)('clicked'), inverted: true, disabled: disabled },
        'Inverted'
      ),
      _react2.default.createElement(
        _default2.default,
        { onClick: (0, _storybook.action)('clicked'), inverted: true, color: 'white', disabled: disabled },
        'White inverted'
      )
    )
  );
}).add('DropDownButton', function () {
  // eslint-disable-next-line max-len
  var items = [{ index: '1', title: 'Test' }, { index: '2', title: 'Test 2' }, { index: '3', title: 'Test 3' }, { index: '4', title: 'Test 4' }, { index: '5', title: 'Test 5' }, { index: '6', title: 'Test 6' }, { index: '7', title: 'Test 7' }];
  return _react2.default.createElement(
    _sanity2.default,
    { part: 'part:@sanity/components/buttons/dropdown', propTables: [_dropdown2.default] },
    _react2.default.createElement(
      'div',
      null,
      _react2.default.createElement(
        _dropdown2.default,
        {
          items: (0, _knobs.object)('prop: items', items),
          onAction: (0, _storybook.action)('Clicked item'),
          color: getColorKinds(),
          kind: getButtonKinds()
        },
        (0, _knobs.text)('prop: children', 'This is a dropdown')
      ),
      _react2.default.createElement(
        'div',
        null,
        'This text should be under the menu'
      )
    )
  );
}).add('InInput', function () {
  return _react2.default.createElement(
    _sanity2.default,
    { part: 'part:@sanity/components/buttons/in-input', propTables: [_inInput2.default] },
    _react2.default.createElement(
      _default4.default,
      { label: 'Default' },
      _react2.default.createElement(
        'div',
        { className: _inInputStyle2.default.wrapper },
        _react2.default.createElement(_default6.default, null),
        _react2.default.createElement(
          'div',
          { className: _inInputStyle2.default.container },
          _react2.default.createElement(
            _inInput2.default,
            {
              onAction: (0, _storybook.action)('Clicked item'),
              color: getColorKinds(),
              kind: getButtonKinds()
            },
            'browse'
          )
        )
      )
    )
  );
});