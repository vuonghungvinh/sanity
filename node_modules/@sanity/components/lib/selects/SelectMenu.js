'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _default = require('part:@sanity/components/lists/default');

var _SelectMenu = require('./styles/SelectMenu.css');

var _SelectMenu2 = _interopRequireDefault(_SelectMenu);

var _domScrollIntoView = require('dom-scroll-into-view');

var _domScrollIntoView2 = _interopRequireDefault(_domScrollIntoView);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SelectMenu = function (_React$Component) {
  _inherits(SelectMenu, _React$Component);

  function SelectMenu() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, SelectMenu);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = SelectMenu.__proto__ || Object.getPrototypeOf(SelectMenu)).call.apply(_ref, [this].concat(args))), _this), _this.handleItemClick = function (event) {
      var index = Number(event.currentTarget.getAttribute('data-item-index'));
      var _this$props = _this.props,
          onSelect = _this$props.onSelect,
          items = _this$props.items;

      onSelect(items[index]);
    }, _this.setScrollContainer = function (domNode) {
      _this.scrollContainer = domNode;
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(SelectMenu, [{
    key: 'componentDidUpdate',
    value: function componentDidUpdate(prevProps) {
      if (prevProps.highlightIndex !== this.props.highlightIndex) {
        var itemElement = this.scrollContainer.querySelector('[data-item-index="' + this.props.highlightIndex + '"]');
        (0, _domScrollIntoView2.default)(itemElement, this.scrollContainer, { onlyScrollIfNeeded: true });
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          items = _props.items,
          renderItem = _props.renderItem,
          highlightIndex = _props.highlightIndex,
          value = _props.value;

      return _react2.default.createElement(
        'div',
        { className: _SelectMenu2.default.scrollContainer, ref: this.setScrollContainer },
        _react2.default.createElement(
          _default.List,
          { className: _SelectMenu2.default.list },
          items.map(function (item, index) {
            var _cx;

            var classes = (0, _classnames2.default)(_SelectMenu2.default.item, (_cx = {}, _defineProperty(_cx, _SelectMenu2.default.highlighted, index === highlightIndex), _defineProperty(_cx, _SelectMenu2.default.selected, item === value), _cx));
            return _react2.default.createElement(
              _default.Item,
              { key: index, 'data-item-index': index, onClick: _this2.handleItemClick, className: classes },
              renderItem(item, index)
            );
          })
        )
      );
    }
  }]);

  return SelectMenu;
}(_react2.default.Component);

exports.default = SelectMenu;