'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _StatelessSearchableSelect = require('./StatelessSearchableSelect');

var _StatelessSearchableSelect2 = _interopRequireDefault(_StatelessSearchableSelect);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SearchableSelect = function (_React$Component) {
  _inherits(SearchableSelect, _React$Component);

  function SearchableSelect(props) {
    _classCallCheck(this, SearchableSelect);

    var _this = _possibleConstructorReturn(this, (SearchableSelect.__proto__ || Object.getPrototypeOf(SearchableSelect)).call(this));

    _initialiseProps.call(_this);

    var inputValue = props.inputValue;

    _this.state = {
      inputValue: inputValue || '',
      isOpen: false,
      highlightIndex: -1,
      isInputSelected: false,
      arrowNavigationPosition: 0,
      width: 448,
      hasFocus: false,
      dropdownPosition: props.dropdownPosition || 'bottom'
    };
    return _this;
  }

  _createClass(SearchableSelect, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (nextProps.items != this.props.items) {
        this.setState({
          searchResult: this.props.items
        });
      }

      if (nextProps.inputValue !== this.props.inputValue) {
        this.setState({
          inputValue: nextProps.inputValue
        });
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _state = this.state,
          isOpen = _state.isOpen,
          highlightIndex = _state.highlightIndex,
          isInputSelected = _state.isInputSelected,
          inputValue = _state.inputValue,
          width = _state.width,
          hasFocus = _state.hasFocus,
          dropdownPosition = _state.dropdownPosition;

      var _props = this.props,
          onSearch = _props.onSearch,
          rest = _objectWithoutProperties(_props, ['onSearch']);

      return _react2.default.createElement(
        'div',
        { ref: this.setRootElement },
        _react2.default.createElement(_StatelessSearchableSelect2.default, _extends({}, rest, {
          onFocus: this.handleFocus,
          onBlur: this.handleBlur,
          onHighlightIndexChange: this.handleHighlightIndexChange,
          onOpen: this.handleOpen,
          onClose: this.handleClose,
          onChange: this.handleChange,
          onResize: this.handleResize,
          dropdownPosition: dropdownPosition,
          isOpen: isOpen,
          highlightIndex: highlightIndex,
          isInputSelected: isInputSelected,
          inputValue: inputValue,
          onInputChange: this.handleInputChange,
          width: width,
          isSelected: hasFocus
        }))
      );
    }
  }]);

  return SearchableSelect;
}(_react2.default.Component);

SearchableSelect.propTypes = {
  label: _propTypes2.default.string,
  description: _propTypes2.default.string,
  onChange: _propTypes2.default.func,
  onSearch: _propTypes2.default.func,
  onOpen: _propTypes2.default.func,
  onClose: _propTypes2.default.func,
  onClear: _propTypes2.default.func,
  value: _propTypes2.default.object,
  inputValue: _propTypes2.default.string,
  error: _propTypes2.default.bool,
  placeholder: _propTypes2.default.string,
  isLoading: _propTypes2.default.bool,
  renderItem: _propTypes2.default.func.isRequired,
  items: _propTypes2.default.array,
  dropdownPosition: _propTypes2.default.string
};
SearchableSelect.defaultProps = {
  placeholder: 'Type to searchâ€¦',
  isLoading: false,
  onChange: function onChange() {},
  onSearch: function onSearch() {},
  onOpen: function onOpen() {},
  onClose: function onClose() {}
};

var _initialiseProps = function _initialiseProps() {
  var _this2 = this;

  this.handleChange = function (item) {
    var onChange = _this2.props.onChange;

    _this2.setState({
      isInputSelected: true
    });
    onChange(item);
    _this2.handleClose();
  };

  this.handleOpen = function () {
    _this2.setState({
      isOpen: true
    });
    _this2.props.onOpen();
  };

  this.handleClose = function () {
    _this2.setState({
      isOpen: false
    });
    _this2.props.onClose();
  };

  this.handleInputChange = function (inputValue) {
    _this2.setState({
      inputValue: inputValue,
      isInputSelected: false,
      isOpen: true
    });
    _this2.props.onSearch(inputValue);
  };

  this.handleHighlightIndexChange = function (nextIndex) {
    _this2.setState({ highlightIndex: nextIndex });
  };

  this.setRootElement = function (element) {
    _this2._rootElement = element;
    if (_this2._rootElement) {
      _this2.setState({
        width: _this2._rootElement.offsetWidth
      });
    }
  };

  this.handleFocus = function (event) {
    _this2.setState({
      hasFocus: true
    });
  };

  this.handleBlur = function (event) {
    _this2.setState({
      hasFocus: false
    });
  };

  this.handleResize = function (dimensions) {
    var width = _this2._rootElement.clientWidth;
    if (window.innerHeight - dimensions.rootTop < window.innerHeight / 3) {
      _this2.setState({
        dropdownPosition: 'top',
        width: width
      });
    } else {
      _this2.setState({
        dropdownPosition: 'bottom',
        width: width
      });
    }
  };
};

exports.default = SearchableSelect;