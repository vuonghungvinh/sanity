'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _truncate2 = require('lodash/truncate');

var _truncate3 = _interopRequireDefault(_truncate2);

var _debounce2 = require('lodash/debounce');

var _debounce3 = _interopRequireDefault(_debounce2);

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _format = require('date-fns/format');

var _format2 = _interopRequireDefault(_format);

var _cardStyle = require('part:@sanity/components/previews/card-style');

var _cardStyle2 = _interopRequireDefault(_cardStyle);

var _assetUrlBuilder = require('part:@sanity/base/asset-url-builder');

var _assetUrlBuilder2 = _interopRequireDefault(_assetUrlBuilder);

var _SvgPlaceholder = require('./common/SvgPlaceholder');

var _SvgPlaceholder2 = _interopRequireDefault(_SvgPlaceholder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var index = 0;

var CardPreview = function (_React$Component) {
  _inherits(CardPreview, _React$Component);

  function CardPreview(props, context) {
    _classCallCheck(this, CardPreview);

    var _this = _possibleConstructorReturn(this, (CardPreview.__proto__ || Object.getPrototypeOf(CardPreview)).call(this, props, context));

    _this.index = index++;
    _this.onResize = (0, _debounce3.default)(function () {
      var el = _this.inner;
      if (el) {
        var fontSize = window.getComputedStyle(el, null).getPropertyValue('font-size').split('px')[0];
        var emWidth = el.offsetWidth / fontSize;
        _this.setState({
          emWidth: emWidth
        });
      }
    }, 1000 / 60);

    _this.setInnerElement = function (inner) {
      _this.inner = inner;
    };

    _this.state = {
      emWidth: 10
    };
    return _this;
  }

  _createClass(CardPreview, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      window.addEventListener('resize', this.onResize);
      this.onResize();
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      window.removeEventListener('resize', this.onResize);
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          item = _props.item,
          emptyText = _props.emptyText,
          children = _props.children,
          aspect = _props.aspect,
          isPlaceholder = _props.isPlaceholder;
      var emWidth = this.state.emWidth;


      var containerAspect = aspect;
      var imageAspect = this.state.aspect || this.props.item && this.props.item.aspect || 1;

      if (!item || isPlaceholder) {
        return _react2.default.createElement(_SvgPlaceholder2.default, { styles: _cardStyle2.default });
      }

      var imageUrl = item.imageUrl,
          sanityImage = item.sanityImage,
          media = item.media;

      var assetUrl = (0, _assetUrlBuilder2.default)(_extends({}, this.props.assetSize, { url: imageUrl }));

      return _react2.default.createElement(
        'div',
        { className: '' + _cardStyle2.default.root },
        _react2.default.createElement(
          'div',
          { className: _cardStyle2.default.inner, ref: this.setInnerElement },
          _react2.default.createElement(
            'div',
            { className: '' + _cardStyle2.default.mediaContainer },
            !imageUrl && !sanityImage && !media && _react2.default.createElement(
              'div',
              { className: _cardStyle2.default.media },
              _react2.default.createElement('div', { style: { paddingTop: 100 / containerAspect + '%' } })
            ),
            imageUrl && _react2.default.createElement('img', { src: assetUrl, className: imageAspect >= containerAspect ? _cardStyle2.default.imgLandscape : _cardStyle2.default.imgPortrait }),
            sanityImage && _react2.default.createElement(
              'div',
              { className: _cardStyle2.default.sanityImage },
              'SanityImage'
            ),
            media && _react2.default.createElement(
              'div',
              { className: _cardStyle2.default.media },
              media
            )
          ),
          _react2.default.createElement(
            'div',
            { className: _cardStyle2.default.meta, ref: 'meta' },
            _react2.default.createElement(
              'div',
              { className: _cardStyle2.default.heading },
              item.date && _react2.default.createElement(
                'p',
                { className: _cardStyle2.default.date },
                emWidth <= 20 && (0, _format2.default)(item.date, 'DD.MM.YY'),
                emWidth <= 30 && emWidth > 20 && (0, _format2.default)(item.date, 'DD.MM.YY hh:mm A'),
                emWidth > 30 && (0, _format2.default)(item.date, 'ddd, MMM Do, YYYY hh:mm A')
              ),
              _react2.default.createElement(
                'h2',
                { className: _cardStyle2.default.title },
                item.title || emptyText
              ),
              _react2.default.createElement(
                'h3',
                { className: _cardStyle2.default.subtitle },
                (0, _truncate3.default)(item.subtitle, {
                  length: 30,
                  separator: /,? +/
                })
              )
            ),
            _react2.default.createElement(
              'p',
              { className: _cardStyle2.default.description },
              (0, _truncate3.default)(item.description, {
                length: 100,
                separator: /,? +/
              })
            ),
            children
          )
        )
      );
    }
  }]);

  return CardPreview;
}(_react2.default.Component);

CardPreview.propTypes = {
  item: _propTypes2.default.shape({
    title: _propTypes2.default.string,
    subtitle: _propTypes2.default.string,
    description: _propTypes2.default.string,
    date: _propTypes2.default.object,
    media: _propTypes2.default.element,
    imageUrl: _propTypes2.default.string,
    sanityImage: _propTypes2.default.object,
    aspect: _propTypes2.default.number
  }),
  assetSize: _propTypes2.default.shape({
    width: _propTypes2.default.number,
    height: _propTypes2.default.number,
    fit: _propTypes2.default.oneOf(['clip', 'crop', 'clamp'])
  }),
  aspect: _propTypes2.default.number,
  emptyText: _propTypes2.default.string,
  children: _propTypes2.default.node,
  isPlaceholder: _propTypes2.default.bool
};
CardPreview.defaultProps = {
  assetSize: { width: 400 },
  emptyText: 'Untitled',
  aspect: 16 / 9
};
exports.default = CardPreview;