'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _assetUrlBuilder = require('part:@sanity/base/asset-url-builder');

var _assetUrlBuilder2 = _interopRequireDefault(_assetUrlBuilder);

var _MediaRender = require('./MediaRender.css');

var _MediaRender2 = _interopRequireDefault(_MediaRender);

var _ImageLoader = require('../../utilities/ImageLoader');

var _ImageLoader2 = _interopRequireDefault(_ImageLoader);

var _imageAreaIcon = require('part:@sanity/base/image-area-icon');

var _imageAreaIcon2 = _interopRequireDefault(_imageAreaIcon);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var MediaRender = function (_React$Component) {
  _inherits(MediaRender, _React$Component);

  function MediaRender() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, MediaRender);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = MediaRender.__proto__ || Object.getPrototypeOf(MediaRender)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      aspect: null
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(MediaRender, [{
    key: 'getAssetUrl',
    value: function getAssetUrl() {
      var devicePixelRatio = window.devicePixelRatio || 1;
      var size = {
        height: Math.round(this.props.size.height * devicePixelRatio),
        width: Math.round(this.props.size.width * devicePixelRatio)
      };
      return (0, _assetUrlBuilder2.default)(_extends({}, size, { url: this.props.item.imageUrl }));
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          item = _props.item,
          fallbackText = _props.fallbackText,
          containerAspect = _props.aspect;
      var media = item.media,
          imageUrl = item.imageUrl,
          sanityImage = item.sanityImage;


      if (imageUrl) {
        return _react2.default.createElement(
          'div',
          { className: _MediaRender2.default.root },
          _react2.default.createElement(
            _ImageLoader2.default,
            { src: this.getAssetUrl(imageUrl) },
            function (_ref2) {
              var image = _ref2.image;
              return image && _react2.default.createElement('img', {
                src: image.src,
                className: (item.aspect || image.width / image.height || 1) > containerAspect ? _MediaRender2.default.landscape : _MediaRender2.default.portrait
              });
            }
          )
        );
      } else if (sanityImage) {
        return _react2.default.createElement(
          'div',
          { className: _MediaRender2.default.sanityImage },
          'SanityImage'
        );
      } else if (media) {
        return _react2.default.createElement(
          'div',
          { className: _MediaRender2.default.media },
          media
        );
      }

      return _react2.default.createElement(
        'div',
        { className: _MediaRender2.default.root },
        _react2.default.createElement(
          'div',
          { className: _MediaRender2.default.noMediaContainer },
          _react2.default.createElement(
            'div',
            { className: _MediaRender2.default.noMedia },
            _react2.default.createElement(
              'div',
              { className: _MediaRender2.default.noImageIcon },
              _react2.default.createElement(_imageAreaIcon2.default, null)
            ),
            _react2.default.createElement(
              'div',
              { className: _MediaRender2.default.noMediaText },
              fallbackText
            )
          )
        )
      );
    }
  }]);

  return MediaRender;
}(_react2.default.Component);

MediaRender.propTypes = {
  aspect: _propTypes2.default.number,
  fallbackText: _propTypes2.default.string,
  size: _propTypes2.default.shape({
    width: _propTypes2.default.number,
    height: _propTypes2.default.number,
    fit: _propTypes2.default.oneOf(['clip', 'crop', 'clamp'])
  }),
  item: _propTypes2.default.shape({
    media: _propTypes2.default.node,
    imageUrl: _propTypes2.default.string,
    sanityImage: _propTypes2.default.object,
    aspect: _propTypes2.default.number
  })
};
MediaRender.defaultProps = {
  size: { width: 100 },
  fallbackText: 'No titleâ€¦',
  aspect: 1
};
exports.default = MediaRender;