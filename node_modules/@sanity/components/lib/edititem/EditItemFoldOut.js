'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _foldStyle = require('part:@sanity/components/edititem/fold-style');

var _foldStyle2 = _interopRequireDefault(_foldStyle);

var _closeIcon = require('part:@sanity/base/close-icon');

var _closeIcon2 = _interopRequireDefault(_closeIcon);

var _sticky = require('part:@sanity/components/portal/sticky');

var _sticky2 = _interopRequireDefault(_sticky);

var _Stacked = require('../utilities/Stacked');

var _Stacked2 = _interopRequireDefault(_Stacked);

var _Escapable = require('../utilities/Escapable');

var _Escapable2 = _interopRequireDefault(_Escapable);

var _CaptureOutsideClicks = require('../utilities/CaptureOutsideClicks');

var _CaptureOutsideClicks2 = _interopRequireDefault(_CaptureOutsideClicks);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var EditItemFoldOut = function (_React$PureComponent) {
  _inherits(EditItemFoldOut, _React$PureComponent);

  function EditItemFoldOut() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, EditItemFoldOut);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = EditItemFoldOut.__proto__ || Object.getPrototypeOf(EditItemFoldOut)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      left: 0,
      width: 500,
      height: 500
    }, _this.setRootElement = function (element) {
      _this._rootElement = element;
    }, _this.setPortalModalElement = function (element) {
      _this._portalModalElement = element;
    }, _this.handleResize = function (dimensions) {
      _this.setState({
        left: dimensions.rootLeft,
        width: _this._rootElement.offsetWidth,
        height: _this._portalModalElement.offsetHeight
      });
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(EditItemFoldOut, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      window.addEventListener('keydown', this.handleKeyDown);
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      window.removeEventListener('keydown', this.handleKeyDown);
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          title = _props.title,
          onClose = _props.onClose,
          children = _props.children;
      var _state = this.state,
          width = _state.width,
          left = _state.left,
          height = _state.height;

      return _react2.default.createElement(
        'div',
        {
          ref: this.setRootElement,
          className: _foldStyle2.default.root,
          style: { height: height ? height + 'px' : 'initial' }
        },
        _react2.default.createElement(
          _sticky2.default,
          {
            isOpen: true,
            onlyBottomSpace: true,
            useOverlay: true,
            addPadding: false,
            scrollIntoView: false,
            onResize: this.handleResize
          },
          _react2.default.createElement(
            _Stacked2.default,
            null,
            function (isActive) {
              return _react2.default.createElement(
                'div',
                {
                  className: _foldStyle2.default.wrapper,
                  ref: _this2.setPortalModalElement,
                  style: {
                    left: left + 'px',
                    width: 'calc(' + width + 'px + (' + _foldStyle2.default.padding + ' * 2))'
                  }
                },
                _react2.default.createElement(_Escapable2.default, { onEscape: function onEscape(event) {
                    return (isActive || event.shiftKey) && onClose();
                  } }),
                _react2.default.createElement(
                  _CaptureOutsideClicks2.default,
                  { onClickOutside: isActive ? onClose : null },
                  title && _react2.default.createElement(
                    'div',
                    { className: _foldStyle2.default.head },
                    title,
                    _react2.default.createElement(
                      'button',
                      { className: _foldStyle2.default.close, type: 'button', onClick: onClose },
                      _react2.default.createElement(_closeIcon2.default, null)
                    )
                  ),
                  !title && _react2.default.createElement(
                    'button',
                    { className: _foldStyle2.default.closeDark, type: 'button', onClick: _this2.handleClose },
                    _react2.default.createElement(_closeIcon2.default, null)
                  ),
                  _react2.default.createElement(
                    'div',
                    { className: _foldStyle2.default.content },
                    children
                  )
                )
              );
            }
          )
        )
      );
    }
  }]);

  return EditItemFoldOut;
}(_react2.default.PureComponent);

EditItemFoldOut.propTypes = {
  title: _propTypes2.default.string,
  children: _propTypes2.default.node.isRequired,
  onClose: _propTypes2.default.func
};
EditItemFoldOut.defaultProps = {
  title: '',
  onClose: function onClose() {}
};
exports.default = EditItemFoldOut;