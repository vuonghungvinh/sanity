'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _storybook = require('part:@sanity/storybook');

var _default = require('part:@sanity/components/textinputs/default');

var _default2 = _interopRequireDefault(_default);

var _knobs = require('part:@sanity/storybook/addons/knobs');

var _sanity = require('part:@sanity/storybook/addons/sanity');

var _sanity2 = _interopRequireDefault(_sanity);

var _CustomStyles = require('./styles/CustomStyles.css');

var _CustomStyles2 = _interopRequireDefault(_CustomStyles);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var VALID_TYPES = ['color', 'date', 'email', 'month', 'password', 'search', 'tel', 'text', 'number', 'url', 'week'];

var DefaultTextInputTest = function (_React$PureComponent) {
  _inherits(DefaultTextInputTest, _React$PureComponent);

  function DefaultTextInputTest() {
    var _ref;

    _classCallCheck(this, DefaultTextInputTest);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = _possibleConstructorReturn(this, (_ref = DefaultTextInputTest.__proto__ || Object.getPrototypeOf(DefaultTextInputTest)).call.apply(_ref, [this].concat(args)));

    _this.handleChange = _this.handleChange.bind(_this);
    _this.state = {
      value: ''
    };
    return _this;
  }

  _createClass(DefaultTextInputTest, [{
    key: 'handleChange',
    value: function handleChange(event) {
      var value = event.currentTarget.value;
      this.setState({
        value: value
      });
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(_default2.default, {
        placeholder: 'This is the placeholder',
        onChange: this.handleChange,
        onFocus: (0, _storybook.action)('onFocus'),
        onKeyPress: (0, _storybook.action)('onKeyPress'),
        onBlur: (0, _storybook.action)('onBlur'),
        value: this.state.value,
        id: 'ThisIsAnUniqueId'
      });
    }
  }]);

  return DefaultTextInputTest;
}(_react2.default.PureComponent);

(0, _storybook.storiesOf)('Text inputs').addDecorator(_knobs.withKnobs).add('Default', function () {
  return _react2.default.createElement(
    _sanity2.default,
    { part: 'part:@sanity/components/textinputs/default', propTables: [_default2.default] },
    _react2.default.createElement(_default2.default, {
      placeholder: (0, _knobs.text)('placeholder (prop)', 'This is the placeholder'),
      value: (0, _knobs.text)('value (prop)', ''),
      type: (0, _knobs.select)('type (prop)', ['text', 'number', 'email', 'tel'], 'text'),
      isSelected: (0, _knobs.boolean)('isSelected (prop)', false),
      disabled: (0, _knobs.boolean)('disabled (prop)', false),
      onChange: (0, _storybook.action)('onChange'),
      onFocus: (0, _storybook.action)('onFocus'),
      onKeyPress: (0, _storybook.action)('onKeyPress'),
      onBlur: (0, _storybook.action)('onBlur'),
      id: 'ThisIsAnUniqueId'
    })
  );
}).add('Custom style', function () {
  return _react2.default.createElement(
    _sanity2.default,
    { part: 'part:@sanity/components/textinputs/default', propTables: [_default2.default] },
    _react2.default.createElement(_default2.default, {
      placeholder: (0, _knobs.text)('placeholder (prop)', 'This is the placeholder'),
      value: (0, _knobs.text)('value (prop)', false),
      type: (0, _knobs.select)('type (prop)', ['text', 'number', 'email', 'tel'], 'text'),
      selected: (0, _knobs.boolean)('selected (prop)', false),
      onChange: (0, _storybook.action)('onChange'),
      onFocus: (0, _storybook.action)('onFocus'),
      onKeyPress: (0, _storybook.action)('onKeyPress'),
      onBlur: (0, _storybook.action)('onBlur'),
      styles: (0, _knobs.object)('styles (prop)', _CustomStyles2.default),
      id: 'ThisIsAnUniqueId'
    })
  );
}).add('Default (test)', function () {
  return _react2.default.createElement(DefaultTextInputTest, {
    placeholder: (0, _knobs.text)('placeholder (prop)', 'This is the placeholder'),
    value: (0, _knobs.text)('value (prop)', ''),
    type: (0, _knobs.select)('type (prop)', VALID_TYPES, 'text'),
    hasError: (0, _knobs.boolean)('hasError (prop)', false),
    isClearable: (0, _knobs.boolean)('isClearable (prop)', false),
    isSelected: (0, _knobs.boolean)('isSelected (prop)', false),
    onChange: (0, _storybook.action)('onChange'),
    onFocus: (0, _storybook.action)('onFocus'),
    onKeyPress: (0, _storybook.action)('onKeyPress'),
    onBlur: (0, _storybook.action)('onBlur'),
    onClear: (0, _storybook.action)('onClear'),
    id: 'ThisIsAnUniqueId'
  });
});