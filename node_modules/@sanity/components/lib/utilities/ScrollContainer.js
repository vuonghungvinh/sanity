'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _ScrollContainer = require('./styles/ScrollContainer.css');

var _ScrollContainer2 = _interopRequireDefault(_ScrollContainer);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ScrollContainer = function (_React$PureComponent) {
  _inherits(ScrollContainer, _React$PureComponent);

  function ScrollContainer() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, ScrollContainer);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ScrollContainer.__proto__ || Object.getPrototypeOf(ScrollContainer)).call.apply(_ref, [this].concat(args))), _this), _this.handleScroll = function (event) {
      _this.props.onScroll(event);
    }, _this.setScrollContainerElement = function (element) {
      _this._scrollContainerElement = element;
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(ScrollContainer, [{
    key: 'getChildContext',
    value: function getChildContext() {
      var _this2 = this;

      return {
        getScrollContainer: function getScrollContainer() {
          return _this2._scrollContainerElement;
        }
      };
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      this._scrollContainerElement.addEventListener('scroll', this.handleScroll, { passive: true });
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this._scrollContainerElement.removeEventListener('scroll', this.handleScroll, { passive: true });
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'div',
        {
          ref: this.setScrollContainerElement,
          className: _ScrollContainer2.default.scrollContainer + ' ' + this.props.className
        },
        this.props.children
      );
    }
  }]);

  return ScrollContainer;
}(_react2.default.PureComponent);

ScrollContainer.propTypes = {
  className: _propTypes2.default.string,
  children: _propTypes2.default.node,
  onScroll: _propTypes2.default.func
};
ScrollContainer.defaultProps = {
  onScroll: function onScroll() {}
};
ScrollContainer.defaultProps = {
  className: ''
};
ScrollContainer.childContextTypes = {
  getScrollContainer: _propTypes2.default.func
};
exports.default = ScrollContainer;