'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = readExif;

var _exifComponent = require('exif-component');

var _exifComponent2 = _interopRequireDefault(_exifComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function readPromisified(file) {
  /* global window */
  var reader = new window.FileReader();

  //console.time("read exif");
  return new Promise(function (resolve, reject) {
    reader.onerror = reject;
    reader.onload = function () {
      var error = null;
      var result = null;
      try {
        result = (0, _exifComponent2.default)(reader.result);
      } catch (err) {
        error = err;
      }
      if (error) {
        reject(error);
      } else {
        resolve(result);
      }
    };
    // read only 128k. should be enough for exif according to https://github.com/mattiasw/ExifReader#tips
    reader.readAsArrayBuffer(file.slice(0, 128000));
  });
}

function readExif(file) {
  return readPromisified(file).then(function (exifData) {
    // Only care about orientation for now
    return { orientation: exifData.orientation };
  }).catch(function (error) {
    if (/invalid image format/i.test(error.message)) {
      return null;
    }
    if (/No exif data/i.test(error.message)) {
      return null;
    }
    return Promise.reject(error);
  });
}