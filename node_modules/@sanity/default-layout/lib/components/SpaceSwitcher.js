'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactClickOutside = require('react-click-outside');

var _reactClickOutside2 = _interopRequireDefault(_reactClickOutside);

var _default = require('part:@sanity/components/menus/default');

var _default2 = _interopRequireDefault(_default);

var _SpaceSwitcher = require('./styles/SpaceSwitcher.css');

var _SpaceSwitcher2 = _interopRequireDefault(_SpaceSwitcher);

var _spaces = require('../util/spaces');

var _urlState = require('../datastores/urlState');

var _router = require('part:@sanity/base/router');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var currentSpace$ = _urlState.state.map(function (event) {
  return event.state && event.state.space;
}).map(function (spaceName) {
  return _spaces.CONFIGURED_SPACES.find(function (sp) {
    return sp.name === spaceName;
  });
});

var SpaceSwitcher = function (_React$PureComponent) {
  _inherits(SpaceSwitcher, _React$PureComponent);

  function SpaceSwitcher() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, SpaceSwitcher);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = SpaceSwitcher.__proto__ || Object.getPrototypeOf(SpaceSwitcher)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      menuOpen: false,
      currentSpace: null
    }, _this.handleClickOutside = function () {
      if (_this.state.menuOpen) {
        _this.setState({ menuOpen: false });
      }
    }, _this.handleMenuToggle = function () {
      _this.setState({ menuOpen: !_this.state.menuOpen });
    }, _this.handleMenuItemClick = function (item) {
      _this.props.router.navigate({ space: item.name });
      _this.setState({ menuOpen: false });
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(SpaceSwitcher, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _this2 = this;

      this.currentSpaceSubscription = currentSpace$.subscribe(function (space) {
        _this2.setState({ currentSpace: space });
      });
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this.currentSpaceSubscription.unsubscribe();
    }
  }, {
    key: 'render',
    value: function render() {
      var _state = this.state,
          menuOpen = _state.menuOpen,
          currentSpace = _state.currentSpace;

      var title = currentSpace && currentSpace.title;
      return _react2.default.createElement(
        'div',
        { className: _SpaceSwitcher2.default.root },
        _react2.default.createElement(
          'div',
          { title: title, onClick: this.handleMenuToggle, className: _SpaceSwitcher2.default.currentSpace },
          title && title + ' \u25BC'
        ),
        menuOpen && _react2.default.createElement(
          'div',
          { className: _SpaceSwitcher2.default.menu },
          _react2.default.createElement(_default2.default, {
            onAction: this.handleMenuItemClick,
            items: _spaces.CONFIGURED_SPACES,
            opened: true,
            origin: 'top-right',
            onClickOutside: this.handleMenuClose
          })
        )
      );
    }
  }]);

  return SpaceSwitcher;
}(_react2.default.PureComponent);

SpaceSwitcher.propTypes = {
  router: _propTypes2.default.shape({ navigate: _propTypes2.default.func })
};
exports.default = (0, _router.withRouterHOC)((0, _reactClickOutside2.default)(SpaceSwitcher));