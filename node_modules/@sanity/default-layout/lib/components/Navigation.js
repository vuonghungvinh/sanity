'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _LoginStatus = require('./LoginStatus');

var _LoginStatus2 = _interopRequireDefault(_LoginStatus);

var _Navigation = require('./styles/Navigation.css');

var _Navigation2 = _interopRequireDefault(_Navigation);

var _Search = require('./Search');

var _Search2 = _interopRequireDefault(_Search);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var DesktopNavigation = function (_React$PureComponent) {
  _inherits(DesktopNavigation, _React$PureComponent);

  function DesktopNavigation() {
    _classCallCheck(this, DesktopNavigation);

    return _possibleConstructorReturn(this, (DesktopNavigation.__proto__ || Object.getPrototypeOf(DesktopNavigation)).apply(this, arguments));
  }

  _createClass(DesktopNavigation, [{
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'div',
        { className: _Navigation2.default.root },
        _react2.default.createElement(
          'div',
          { className: _Navigation2.default.search },
          _react2.default.createElement(_Search2.default, null)
        ),
        _react2.default.createElement(
          'div',
          { className: _Navigation2.default.loginStatus },
          _react2.default.createElement(_LoginStatus2.default, null)
        )
      );
    }
  }]);

  return DesktopNavigation;
}(_react2.default.PureComponent);

exports.default = DesktopNavigation;