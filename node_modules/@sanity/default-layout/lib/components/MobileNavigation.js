'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _LoginStatus = require('./LoginStatus');

var _LoginStatus2 = _interopRequireDefault(_LoginStatus);

var _toolSwitcher = require('part:@sanity/default-layout/tool-switcher');

var _toolSwitcher2 = _interopRequireDefault(_toolSwitcher);

var _MobileNavigation = require('./styles/MobileNavigation.css');

var _MobileNavigation2 = _interopRequireDefault(_MobileNavigation);

var _Branding = require('./Branding');

var _Branding2 = _interopRequireDefault(_Branding);

var _hamburgerIcon = require('part:@sanity/base/hamburger-icon');

var _hamburgerIcon2 = _interopRequireDefault(_hamburgerIcon);

var _default = require('part:@sanity/components/buttons/default');

var _default2 = _interopRequireDefault(_default);

var _Search = require('./Search');

var _Search2 = _interopRequireDefault(_Search);

var _router = require('part:@sanity/base/router');

var _SpaceSwitcher = require('./SpaceSwitcher');

var _SpaceSwitcher2 = _interopRequireDefault(_SpaceSwitcher);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var MobileNavigation = function (_React$Component) {
  _inherits(MobileNavigation, _React$Component);

  function MobileNavigation() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, MobileNavigation);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = MobileNavigation.__proto__ || Object.getPrototypeOf(MobileNavigation)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      isOpen: false
    }, _this.handleOpen = function (event) {
      _this.setState({
        isOpen: true
      });
    }, _this.handleClose = function (event) {
      _this.setState({
        isOpen: false
      });
    }, _this.handleToggle = function () {
      _this.setState({
        isOpen: !_this.state.isOpen
      });
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(MobileNavigation, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      var isOpen = this.state.isOpen;
      var tools = this.props.tools;

      return _react2.default.createElement(
        'div',
        { className: _MobileNavigation2.default.root },
        _react2.default.createElement(_default2.default, {
          kind: 'simple',
          className: _MobileNavigation2.default.hamburgerButton,
          onClick: this.handleToggle,
          title: 'Menu',
          icon: _hamburgerIcon2.default
        }),
        _react2.default.createElement('div', { className: _MobileNavigation2.default.headerBackground }),
        _react2.default.createElement(
          'div',
          { className: '' + (isOpen ? _MobileNavigation2.default.menuOpen : _MobileNavigation2.default.menuClosed) },
          _react2.default.createElement(
            'div',
            { className: _MobileNavigation2.default.searchContainer },
            _react2.default.createElement(_Search2.default, { onSelect: this.handleClose })
          ),
          _react2.default.createElement(_SpaceSwitcher2.default, null),
          _react2.default.createElement(_LoginStatus2.default, { className: _MobileNavigation2.default.loginStatus }),
          _react2.default.createElement(
            _router.WithRouter,
            null,
            function (router) {
              return _react2.default.createElement(_toolSwitcher2.default, {
                tools: tools,
                activeToolName: router.state.tool,
                className: _MobileNavigation2.default.toolSwitcher,
                onClick: _this2.handleClose
              });
            }
          )
        )
      );
    }
  }]);

  return MobileNavigation;
}(_react2.default.Component);

MobileNavigation.propTypes = {
  tools: _propTypes2.default.arrayOf(_propTypes2.default.shape({
    title: _propTypes2.default.string
  }))
};
exports.default = MobileNavigation;