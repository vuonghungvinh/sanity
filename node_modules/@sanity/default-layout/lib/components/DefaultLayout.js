'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp2;

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _router = require('part:@sanity/base/router');

var _absolutes = require('all:part:@sanity/base/absolutes');

var _absolutes2 = _interopRequireDefault(_absolutes);

var _sanityStudioLogo = require('part:@sanity/base/sanity-studio-logo');

var _sanityStudioLogo2 = _interopRequireDefault(_sanityStudioLogo);

var _DefaultLayout = require('./styles/DefaultLayout.css');

var _DefaultLayout2 = _interopRequireDefault(_DefaultLayout);

var _RenderTool = require('./RenderTool');

var _RenderTool2 = _interopRequireDefault(_RenderTool);

var _Navigation = require('./Navigation');

var _Navigation2 = _interopRequireDefault(_Navigation);

var _toolSwitcher = require('part:@sanity/default-layout/tool-switcher');

var _toolSwitcher2 = _interopRequireDefault(_toolSwitcher);

var _plusIcon = require('part:@sanity/base/plus-icon');

var _plusIcon2 = _interopRequireDefault(_plusIcon);

var _ActionModal = require('./ActionModal');

var _ActionModal2 = _interopRequireDefault(_ActionModal);

var _schema = require('part:@sanity/base/schema');

var _schema2 = _interopRequireDefault(_schema);

var _resolver = require('part:@sanity/data-aspects/resolver');

var _resolver2 = _interopRequireDefault(_resolver);

var _Branding = require('./Branding');

var _Branding2 = _interopRequireDefault(_Branding);

var _reactInk = require('react-ink');

var _reactInk2 = _interopRequireDefault(_reactInk);

var _hamburgerIcon = require('part:@sanity/base/hamburger-icon');

var _hamburgerIcon2 = _interopRequireDefault(_hamburgerIcon);

var _default = require('part:@sanity/components/buttons/default');

var _default2 = _interopRequireDefault(_default);

var _SchemaErrorReporter = require('./SchemaErrorReporter');

var _SpaceSwitcher = require('./SpaceSwitcher');

var _SpaceSwitcher2 = _interopRequireDefault(_SpaceSwitcher);

var _spaces = require('../util/spaces');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var dataAspects = new _resolver2.default(_schema2.default);

exports.default = (0, _router.withRouterHOC)((_temp2 = _class = function (_React$Component) {
  _inherits(DefaultLayout, _React$Component);

  function DefaultLayout() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, DefaultLayout);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = DefaultLayout.__proto__ || Object.getPrototypeOf(DefaultLayout)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      createMenuIsOpen: false,
      mobileMenuIsOpen: false
    }, _this.handleCreateButtonClick = function () {
      _this.setState({
        createMenuIsOpen: !_this.state.createMenuIsOpen
      });
    }, _this.handleActionModalClose = function () {
      _this.setState({
        createMenuIsOpen: false
      });
    }, _this.handleMobileMenuToggle = function () {
      _this.setState({
        mobileMenuIsOpen: !_this.state.mobileMenuIsOpen
      });
    }, _this.handleSwitchTool = function () {
      _this.setState({
        mobileMenuIsOpen: false
      });
    }, _this.renderContent = function () {
      var _this$props = _this.props,
          tools = _this$props.tools,
          router = _this$props.router;
      var _this$state = _this.state,
          createMenuIsOpen = _this$state.createMenuIsOpen,
          mobileMenuIsOpen = _this$state.mobileMenuIsOpen;


      var TYPE_ITEMS = dataAspects.getInferredTypes().map(function (typeName) {
        return {
          key: typeName,
          name: typeName,
          title: dataAspects.getDisplayName(typeName)
        };
      });

      var modalActions = TYPE_ITEMS.map(function (item) {
        return {
          title: item.title,
          params: { type: item.name }
        };
      });

      return _react2.default.createElement(
        'div',
        { className: _DefaultLayout2.default.defaultLayout + ' ' + (mobileMenuIsOpen ? _DefaultLayout2.default.mobileMenuIsOpen : '') },
        _react2.default.createElement(
          'div',
          { className: _DefaultLayout2.default.secondaryNavigation },
          _react2.default.createElement(
            'div',
            { className: _DefaultLayout2.default.branding },
            _react2.default.createElement(_Branding2.default, null)
          ),
          _spaces.HAS_SPACES && _react2.default.createElement(
            'div',
            { className: _DefaultLayout2.default.spaceSwitcher },
            _react2.default.createElement(_SpaceSwitcher2.default, null)
          ),
          _react2.default.createElement(
            'a',
            { className: _DefaultLayout2.default.createButton, onClick: _this.handleCreateButtonClick },
            _react2.default.createElement(
              'span',
              { className: _DefaultLayout2.default.createButtonIcon },
              _react2.default.createElement(_plusIcon2.default, null)
            ),
            _react2.default.createElement(
              'span',
              { className: _DefaultLayout2.default.createButtonText },
              'New'
            ),
            _react2.default.createElement(_reactInk2.default, { duration: 200, opacity: 0.10, radius: 200 })
          ),
          _react2.default.createElement(
            'div',
            { className: _DefaultLayout2.default.mobileMenuButton },
            _react2.default.createElement(_default2.default, {
              kind: 'simple',
              onClick: _this.handleMobileMenuToggle,
              title: 'Menu',
              icon: _hamburgerIcon2.default
            })
          ),
          _react2.default.createElement(_toolSwitcher2.default, {
            tools: _this.props.tools,
            activeToolName: router.state.tool,
            onSwitchTool: _this.handleSwitchTool,
            className: _DefaultLayout2.default.toolSwitcher
          })
        ),
        _react2.default.createElement(
          'div',
          { className: _DefaultLayout2.default.mainArea },
          _react2.default.createElement(
            'div',
            { className: _DefaultLayout2.default.navigation },
            _react2.default.createElement(_Navigation2.default, { tools: tools })
          ),
          _react2.default.createElement(
            'div',
            { className: _DefaultLayout2.default.toolContainer },
            _react2.default.createElement(
              _router.RouteScope,
              { scope: router.state.tool },
              _react2.default.createElement(_RenderTool2.default, { tool: router.state.tool })
            )
          )
        ),
        createMenuIsOpen && _react2.default.createElement(_ActionModal2.default, { onClose: _this.handleActionModalClose, actions: modalActions }),
        _react2.default.createElement(
          'a',
          { className: _DefaultLayout2.default.sanityStudioLogoContainer, href: 'http://sanity.io' },
          _react2.default.createElement(_sanityStudioLogo2.default, null)
        ),
        _absolutes2.default.map(function (Abs, i) {
          return _react2.default.createElement(Abs, { key: i });
        })
      );
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(DefaultLayout, [{
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        _SchemaErrorReporter.SchemaErrorReporter,
        null,
        this.renderContent
      );
    }
  }]);

  return DefaultLayout;
}(_react2.default.Component), _class.propTypes = {
  router: _propTypes2.default.shape({
    state: _propTypes2.default.object,
    navigate: _propTypes2.default.func
  }),
  tools: _propTypes2.default.arrayOf(_propTypes2.default.shape({
    name: _propTypes2.default.string
  }))
}, _temp2));