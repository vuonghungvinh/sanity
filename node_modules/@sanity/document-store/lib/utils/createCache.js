"use strict";

var hasOwn = Object.prototype.hasOwnProperty.call.bind(Object.prototype.hasOwnProperty);

module.exports = function createObservableCache() {
  var cache = Object.create(null);

  return {
    get: function get(key) {
      return cache[key];
    },
    fetch: function fetch(key, producerFn) {
      if (this.has(key)) {
        return this.get(key);
      }
      return put(key, producerFn());
    },
    remove: function remove(key) {
      delete cache[key];
    },
    has: function has(key) {
      return hasOwn(cache, key);
    }
  };

  function put(key, value) {
    cache[key] = value;
    return cache[key];
  }
};