'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _pick2 = require('lodash/pick');

var _pick3 = _interopRequireDefault(_pick2);

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

exports.default = stringify;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function isEmpty(object) {
  for (var key in object) {
    if (object.hasOwnProperty(key)) {
      return false;
    }
  }
  return true;
}

function _stringify(value, options, depth) {
  if (depth > options.maxDepth) {
    return '...';
  }
  if (Array.isArray(value)) {
    if (value.length === 0) {
      return '[empty]';
    }
    var capLength = Math.max(value.length - options.maxBreadth);
    var _asString = value.slice(0, options.maxBreadth).map(function (item, index) {
      return _stringify(item, options, depth + 1);
    }).concat(capLength > 0 ? '\u2026+' + capLength : []).join(', ');

    return depth === 0 ? _asString : '[' + _asString + ']';
  }
  if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && value !== null) {
    var keys = Object.keys(value).filter(function (key) {
      return !options.ignoreKeys.includes(key) && typeof value[key] !== 'undefined';
    });

    if (isEmpty((0, _pick3.default)(value, keys))) {
      return '{empty}';
    }

    var _asString2 = keys.slice(0, options.maxBreadth).map(function (key) {
      return key + ': ' + _stringify(value[key], options, depth + 1);
    }).join(', ');

    return depth === 0 ? _asString2 : '{' + _asString2 + '}';
  }
  var asString = String(value);
  return asString === '' ? '""' : asString;
}

function stringify(value) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  var opts = {
    maxDepth: 'maxDepth' in options ? options.maxDepth : 2,
    maxBreadth: 'maxBreadth' in options ? options.maxBreadth : 2,
    ignoreKeys: 'ignoreKeys' in options ? options.ignoreKeys : []
  };
  return _stringify(value, opts, 0);
}