'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _mergeWith2 = require('lodash/mergeWith');

var _mergeWith3 = _interopRequireDefault(_mergeWith2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const sanityEnv = process.env.SANITY_ENV || 'production'; // eslint-disable-line no-process-env
const apiHosts = {
  staging: 'https://api.sanity.work',
  development: 'http://api.sanity.wtf'
};

function merge(objValue, srcValue, key) {
  if (Array.isArray(objValue)) {
    return objValue.concat(srcValue);
  }

  // Pass on to default merging strategy
  return undefined;
}

exports.default = function (rawConfig) {
  let env = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'development';

  const apiHost = apiHosts[sanityEnv];
  const sanityConf = apiHost ? { api: { apiHost: apiHost } } : {};
  const envConfig = (rawConfig.env || {})[env] || {};
  const config = (0, _mergeWith3.default)({}, rawConfig, envConfig, sanityConf, merge);
  delete config.env;
  return config;
};