'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.pathIsEmpty = undefined;

let pathIsEmpty = exports.pathIsEmpty = (() => {
  var _ref = _asyncToGenerator(function* (dir) {
    try {
      const content = yield _fsExtra2.default.readdir(absolutify(dir));
      return content.length === 0;
    } catch (err) {
      if (err.code === 'ENOENT') {
        return true;
      }

      throw err;
    }
  });

  return function pathIsEmpty(_x) {
    return _ref.apply(this, arguments);
  };
})();

exports.expandHome = expandHome;
exports.absolutify = absolutify;

var _fsExtra = require('fs-extra');

var _fsExtra2 = _interopRequireDefault(_fsExtra);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _os = require('os');

var _os2 = _interopRequireDefault(_os);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

function expandHome(filePath) {
  if (filePath.charCodeAt(0) === 126 /* ~ */) {
      if (filePath.charCodeAt(1) === 43 /* + */) {
          return _path2.default.join(process.cwd(), filePath.slice(2));
        }

      const home = _os2.default.homedir();
      return home ? _path2.default.join(home, filePath.slice(1)) : filePath;
    }

  return filePath;
}

function absolutify(dir) {
  const pathName = expandHome(dir);
  return _path2.default.isAbsolute(pathName) ? pathName : _path2.default.resolve(process.cwd(), pathName);
}