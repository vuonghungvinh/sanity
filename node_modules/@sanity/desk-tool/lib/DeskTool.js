'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _DeskTool = require('./styles/DeskTool.css');

var _DeskTool2 = _interopRequireDefault(_DeskTool);

var _SchemaPaneResolver = require('./SchemaPaneResolver');

var _SchemaPaneResolver2 = _interopRequireDefault(_SchemaPaneResolver);

var _client = require('part:@sanity/base/client');

var _client2 = _interopRequireDefault(_client);

var _router = require('part:@sanity/base/router');

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

exports.default = (0, _router.withRouterHOC)((_temp = _class = function (_React$Component) {
  _inherits(DeskTool, _React$Component);

  function DeskTool() {
    _classCallCheck(this, DeskTool);

    return _possibleConstructorReturn(this, (DeskTool.__proto__ || Object.getPrototypeOf(DeskTool)).apply(this, arguments));
  }

  _createClass(DeskTool, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      this.checkRedirect(nextProps);
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.checkRedirect(this.props);
    }
  }, {
    key: 'checkRedirect',
    value: function checkRedirect(props) {
      var router = props.router;
      var _router$state = router.state,
          selectedType = _router$state.selectedType,
          selectedDocumentId = _router$state.selectedDocumentId;

      if (selectedType === '*' && selectedDocumentId && selectedType) {
        this.checkType(selectedDocumentId, selectedType);
      }
    }
  }, {
    key: 'checkType',
    value: function checkType(documentId, expectedType) {
      var _this2 = this;

      if (this._checkTypeSubscription) {
        this._checkTypeSubscription.unsubscribe();
      }
      this._checkTypeSubscription = _client2.default.observable.fetch('*[_id == "' + documentId + '" || _id == "drafts.' + documentId + '"][0]._type').subscribe(function (actualType) {
        if (actualType && actualType !== expectedType) {
          var router = _this2.props.router;

          router.navigate(_extends({}, router.state, { selectedType: actualType }), { replace: true });
        }
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var router = this.props.router;


      return _react2.default.createElement(
        'div',
        { className: _DeskTool2.default.deskTool },
        _react2.default.createElement(_SchemaPaneResolver2.default, { router: router })
      );
    }
  }]);

  return DeskTool;
}(_react2.default.Component), _class.propTypes = {
  router: _propTypes2.default.shape({
    state: _propTypes2.default.object
  }).isRequired
}, _temp));