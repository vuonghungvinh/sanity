'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _fullscreen = require('part:@sanity/components/dialogs/fullscreen');

var _fullscreen2 = _interopRequireDefault(_fullscreen);

var _DocTitle = require('./DocTitle');

var _DocTitle2 = _interopRequireDefault(_DocTitle);

var _distance_in_words_to_now = require('date-fns/distance_in_words_to_now');

var _distance_in_words_to_now2 = _interopRequireDefault(_distance_in_words_to_now);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
/* eslint-disable react/no-multi-comp */


var CANCEL_ACTION = { name: 'cancel', title: 'Cancel', kind: 'secondary' };

var ConfirmDiscard = function (_React$PureComponent) {
  _inherits(ConfirmDiscard, _React$PureComponent);

  function ConfirmDiscard() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, ConfirmDiscard);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ConfirmDiscard.__proto__ || Object.getPrototypeOf(ConfirmDiscard)).call.apply(_ref, [this].concat(args))), _this), _this.handleAction = function (action) {
      var _this$props = _this.props,
          onCancel = _this$props.onCancel,
          onConfirm = _this$props.onConfirm;

      if (action.name === 'confirm') {
        onConfirm();
      }
      if (action.name === 'cancel') {
        onCancel();
      }
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(ConfirmDiscard, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          draft = _props.draft,
          published = _props.published,
          onCancel = _props.onCancel;

      var confirmAction = {
        name: 'confirm',
        title: 'Discard ' + (published ? 'changes' : 'draft') + ' now',
        color: 'danger'
      };
      return _react2.default.createElement(
        _fullscreen2.default,
        {
          isOpen: true,
          showHeader: true,
          title: 'Confirm discard ' + (published ? 'changes' : 'document'),
          centered: true,
          onClose: onCancel,
          onAction: this.handleAction,
          actions: [confirmAction, CANCEL_ACTION]
        },
        _react2.default.createElement(
          'div',
          { style: { padding: 10 } },
          _react2.default.createElement(
            'p',
            null,
            'Are you sure you would like to discard ',
            published ? 'changes in' : 'the document',
            ' ',
            _react2.default.createElement(
              'strong',
              null,
              _react2.default.createElement(_DocTitle2.default, { document: draft || published })
            ),
            '?'
          ),
          _react2.default.createElement(
            'p',
            null,
            'This will ',
            published ? 'revert to the latest published version of this document (published ' + (0, _distance_in_words_to_now2.default)(published._updatedAt, { addSuffix: true }) + ').' : 'delete it entirely and there is no going back.'
          )
        )
      );
    }
  }]);

  return ConfirmDiscard;
}(_react2.default.PureComponent);

ConfirmDiscard.propTypes = {
  onCancel: _propTypes2.default.func.isRequired,
  onConfirm: _propTypes2.default.func.isRequired,
  published: _propTypes2.default.object,
  draft: _propTypes2.default.object
};
exports.default = ConfirmDiscard;