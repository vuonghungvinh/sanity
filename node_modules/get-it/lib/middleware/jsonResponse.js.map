{"version":3,"sources":["../../src/middleware/jsonResponse.js"],"names":["objectAssign","require","module","exports","onResponse","contentType","response","headers","body","indexOf","tryParse","processOptions","options","Accept","JSON","parse","err","message"],"mappings":";;AAAA,IAAMA,eAAeC,QAAQ,eAAR,CAArB;;AAEAC,OAAOC,OAAP,GAAiB;AAAA,SAAO;AACtBC,gBAAY,8BAAY;AACtB,UAAMC,cAAcC,SAASC,OAAT,CAAiB,cAAjB,CAApB;AACA,UAAI,CAACD,SAASE,IAAV,IAAkB,CAACH,WAAnB,IAAkCA,YAAYI,OAAZ,CAAoB,kBAApB,MAA4C,CAAC,CAAnF,EAAsF;AACpF,eAAOH,QAAP;AACD;;AAED,aAAON,aAAa,EAAb,EAAiBM,QAAjB,EAA2B,EAACE,MAAME,SAASJ,SAASE,IAAlB,CAAP,EAA3B,CAAP;AACD,KARqB;;AAUtBG,oBAAgB;AAAA,aAAWX,aAAa,EAAb,EAAiBY,OAAjB,EAA0B;AACnDL,iBAASP,aAAa,EAACa,QAAQ,kBAAT,EAAb,EAA2CD,QAAQL,OAAnD;AAD0C,OAA1B,CAAX;AAAA;AAVM,GAAP;AAAA,CAAjB;;AAeA,SAASG,QAAT,CAAkBF,IAAlB,EAAwB;AACtB,MAAI;AACF,WAAOM,KAAKC,KAAL,CAAWP,IAAX,CAAP;AACD,GAFD,CAEE,OAAOQ,GAAP,EAAY;AACZA,QAAIC,OAAJ,gDAAyDD,IAAIC,OAA7D;AACA,UAAMD,GAAN;AACD;AACF","file":"jsonResponse.js","sourcesContent":["const objectAssign = require('object-assign')\n\nmodule.exports = () => ({\n  onResponse: response => {\n    const contentType = response.headers['content-type']\n    if (!response.body || !contentType || contentType.indexOf('application/json') === -1) {\n      return response\n    }\n\n    return objectAssign({}, response, {body: tryParse(response.body)})\n  },\n\n  processOptions: options => objectAssign({}, options, {\n    headers: objectAssign({Accept: 'application/json'}, options.headers)\n  })\n})\n\nfunction tryParse(body) {\n  try {\n    return JSON.parse(body)\n  } catch (err) {\n    err.message = `Failed to parsed response body as JSON: ${err.message}`\n    throw err\n  }\n}\n"]}